[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar Tracker = Package.deps.Tracker;\nvar Deps = Package.deps.Deps;\nvar _ = Package.underscore._;\nvar Mongo = Package.mongo.Mongo;\nvar EJSON = Package.ejson.EJSON;\nvar Template = Package.templating.Template;\nvar Spacebars = Package.spacebars.Spacebars;\nvar Blaze = Package.ui.Blaze;\nvar UI = Package.ui.UI;\nvar Handlebars = Package.ui.Handlebars;\nvar Session = Package.session.Session;\nvar WebApp = Package.webapp.WebApp;\nvar Log = Package.logging.Log;\nvar DDP = Package['ddp-client'].DDP;\nvar $ = Package.jquery.$;\nvar jQuery = Package.jquery.jQuery;\nvar Random = Package.random.Random;\nvar LaunchScreen = Package['launch-screen'].LaunchScreen;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar __coffeescriptShare;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/alethes_pages/packages/alethes_pages.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n(function () {                                                                                                         // 1\n                                                                                                                       // 2\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/alethes:pages/lib/pages.coffee.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar Pages,                                                                                                             // 10\n  __slice = [].slice,                                                                                                  // 11\n  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n                                                                                                                       // 13\nthis.__Pages = Pages = (function() {                                                                                   // 14\n  Pages.prototype.settings = {                                                                                         // 15\n    dataMargin: [true, Number, 3],                                                                                     // 16\n    divWrapper: [true, Match.OneOf(Match.Optional(String), Match.Optional(Boolean)), \"pagesCont\"],                     // 17\n    fields: [true, Object, {}],                                                                                        // 18\n    filters: [true, Object, {}],                                                                                       // 19\n    itemTemplate: [true, String, \"_pagesItemDefault\"],                                                                 // 20\n    navShowEdges: [true, Boolean, false],                                                                              // 21\n    navShowFirst: [true, Boolean, true],                                                                               // 22\n    navShowLast: [true, Boolean, true],                                                                                // 23\n    resetOnReload: [true, Boolean, false],                                                                             // 24\n    paginationMargin: [true, Number, 3],                                                                               // 25\n    perPage: [true, Number, 10],                                                                                       // 26\n    route: [true, String, \"/page/\"],                                                                                   // 27\n    router: [true, Match.Optional(String), void 0],                                                                    // 28\n    routerTemplate: [true, String, \"pages\"],                                                                           // 29\n    routerLayout: [true, Match.Optional(String), void 0],                                                              // 30\n    sort: [true, Object, {}],                                                                                          // 31\n    auth: [false, Match.Optional(Function), void 0],                                                                   // 32\n    availableSettings: [false, Object, {}],                                                                            // 33\n    fastRender: [false, Boolean, false],                                                                               // 34\n    homeRoute: [false, Match.OneOf(String, Array, Boolean), \"/\"],                                                      // 35\n    infinite: [false, Boolean, false],                                                                                 // 36\n    infiniteItemsLimit: [false, Number, Infinity],                                                                     // 37\n    infiniteTrigger: [false, Number, .9],                                                                              // 38\n    infiniteRateLimit: [false, Number, 1],                                                                             // 39\n    navTemplate: [false, String, \"_pagesNavCont\"],                                                                     // 40\n    onDeniedSetting: [                                                                                                 // 41\n      false, Function, function(k, v, e) {                                                                             // 42\n        return typeof console !== \"undefined\" && console !== null ? console.log(\"Changing \" + k + \" not allowed.\") : void 0;\n      }                                                                                                                // 44\n    ],                                                                                                                 // 45\n    pageSizeLimit: [false, Number, 60],                                                                                // 46\n    pageTemplate: [false, String, \"_pagesPageCont\"],                                                                   // 47\n    rateLimit: [false, Number, 1],                                                                                     // 48\n    routeSettings: [false, Match.Optional(Function), void 0],                                                          // 49\n    table: [false, Match.OneOf(Boolean, Object), false],                                                               // 50\n    tableItemTemplate: [false, String, \"_pagesTableItem\"],                                                             // 51\n    tableTemplate: [false, String, \"_pagesTable\"],                                                                     // 52\n    templateName: [false, Match.Optional(String), void 0]                                                              // 53\n  };                                                                                                                   // 54\n                                                                                                                       // 55\n  Pages.prototype._nInstances = 0;                                                                                     // 56\n                                                                                                                       // 57\n  Pages.prototype.collections = {};                                                                                    // 58\n                                                                                                                       // 59\n  Pages.prototype.instances = {};                                                                                      // 60\n                                                                                                                       // 61\n  Pages.prototype.methods = {                                                                                          // 62\n    \"CountPages\": function(sub) {                                                                                      // 63\n      var n;                                                                                                           // 64\n      n = sub.get(\"nPublishedPages\");                                                                                  // 65\n      if (n != null) {                                                                                                 // 66\n        return n;                                                                                                      // 67\n      }                                                                                                                // 68\n      n = Math.ceil(this.Collection.find({                                                                             // 69\n        $and: [sub.get(\"filters\"), sub.get(\"realFilters\") || {}]                                                       // 70\n      }).count() / (sub.get(\"perPage\")));                                                                              // 71\n      return n || 1;                                                                                                   // 72\n    },                                                                                                                 // 73\n    \"Set\": function(k, v, sub) {                                                                                       // 74\n      var changes, _k, _v;                                                                                             // 75\n      if (this.settings[k] == null) {                                                                                  // 76\n        this.error(4003, \"Invalid option: \" + k + \".\");                                                                // 77\n      }                                                                                                                // 78\n      check(k, String);                                                                                                // 79\n      check(v, this.settings[k][1]);                                                                                   // 80\n      check(sub, Match.Where(function(sub) {                                                                           // 81\n        var _ref;                                                                                                      // 82\n        return ((_ref = sub.connection) != null ? _ref.id : void 0) != null;                                           // 83\n      }));                                                                                                             // 84\n      if (!this.availableSettings[k] || (_.isFunction(this.availableSettings[k]) && !this.availableSettings[k](v, sub))) {\n        this.error(4002, \"Changing \" + k + \" not allowed.\");                                                           // 86\n      }                                                                                                                // 87\n      changes = 0;                                                                                                     // 88\n      if (v != null) {                                                                                                 // 89\n        changes = this._set(k, v, {                                                                                    // 90\n          cid: sub.connection.id                                                                                       // 91\n        });                                                                                                            // 92\n      } else if (!_.isString(k)) {                                                                                     // 93\n        for (_k in k) {                                                                                                // 94\n          _v = k[_k];                                                                                                  // 95\n          changes += this.set(_k, _v, {                                                                                // 96\n            cid: sub.connection.id                                                                                     // 97\n          });                                                                                                          // 98\n        }                                                                                                              // 99\n      }                                                                                                                // 100\n      return changes;                                                                                                  // 101\n    },                                                                                                                 // 102\n    \"Unsubscribe\": function() {                                                                                        // 103\n      var i, k, subs, _i, _len, _ref;                                                                                  // 104\n      subs = [];                                                                                                       // 105\n      _ref = this.subscriptions;                                                                                       // 106\n      for (k = _i = 0, _len = _ref.length; _i < _len; k = ++_i) {                                                      // 107\n        i = _ref[k];                                                                                                   // 108\n        if (i.connection.id === arguments[arguments.length - 1].connection.id) {                                       // 109\n          i.stop();                                                                                                    // 110\n        } else {                                                                                                       // 111\n          subs.push(i);                                                                                                // 112\n        }                                                                                                              // 113\n      }                                                                                                                // 114\n      this.subscriptions = subs;                                                                                       // 115\n      return true;                                                                                                     // 116\n    }                                                                                                                  // 117\n  };                                                                                                                   // 118\n                                                                                                                       // 119\n  function Pages(collection, settings) {                                                                               // 120\n    if (settings == null) {                                                                                            // 121\n      settings = {};                                                                                                   // 122\n    }                                                                                                                  // 123\n    if (!(this instanceof Meteor.Pagination)) {                                                                        // 124\n      throw new Meteor.Error(4000, \"The Meteor.Pagination instance has to be initiated with `new`\");                   // 125\n    }                                                                                                                  // 126\n    this.init = true;                                                                                                  // 127\n    this.subscriptions = [];                                                                                           // 128\n    this.userSettings = {};                                                                                            // 129\n    this._currentPage = 1;                                                                                             // 130\n    this.setCollection(collection);                                                                                    // 131\n    this.setInitial(settings);                                                                                         // 132\n    this.setDefaults();                                                                                                // 133\n    this.setRouter();                                                                                                  // 134\n    this[(Meteor.isServer ? \"server\" : \"client\") + \"Init\"]();                                                          // 135\n    this.registerInstance();                                                                                           // 136\n    this;                                                                                                              // 137\n  }                                                                                                                    // 138\n                                                                                                                       // 139\n  Pages.prototype.error = function(code, msg) {                                                                        // 140\n    if (code == null) {                                                                                                // 141\n      msg = code;                                                                                                      // 142\n    }                                                                                                                  // 143\n    throw new Meteor.Error(code, msg);                                                                                 // 144\n  };                                                                                                                   // 145\n                                                                                                                       // 146\n  Pages.prototype.serverInit = function() {                                                                            // 147\n    var self;                                                                                                          // 148\n    this.setMethods();                                                                                                 // 149\n    self = this;                                                                                                       // 150\n    Meteor.onConnection((function(_this) {                                                                             // 151\n      return function(connection) {                                                                                    // 152\n        return connection.onClose(function() {                                                                         // 153\n          return delete _this.userSettings[connection.id];                                                             // 154\n        });                                                                                                            // 155\n      };                                                                                                               // 156\n    })(this));                                                                                                         // 157\n    return Meteor.publish(this.id, function(page) {                                                                    // 158\n      return self.publish.call(self, page, this);                                                                      // 159\n    });                                                                                                                // 160\n  };                                                                                                                   // 161\n                                                                                                                       // 162\n  Pages.prototype.clientInit = function() {                                                                            // 163\n    this.requested = {};                                                                                               // 164\n    this.received = {};                                                                                                // 165\n    this.queue = [];                                                                                                   // 166\n    this.setTemplates();                                                                                               // 167\n    this.countPages();                                                                                                 // 168\n    Tracker.autorun((function(_this) {                                                                                 // 169\n      return function() {                                                                                              // 170\n        if (typeof Meteor.userId === \"function\") {                                                                     // 171\n          Meteor.userId();                                                                                             // 172\n        }                                                                                                              // 173\n        return _this.reload();                                                                                         // 174\n      };                                                                                                               // 175\n    })(this));                                                                                                         // 176\n    if (this.infinite) {                                                                                               // 177\n      return this.setInfiniteTrigger();                                                                                // 178\n    }                                                                                                                  // 179\n  };                                                                                                                   // 180\n                                                                                                                       // 181\n  Pages.prototype.reload = function() {                                                                                // 182\n    return this.unsubscribe((function(_this) {                                                                         // 183\n      return function() {                                                                                              // 184\n        return _this.call(\"CountPages\", function(e, total) {                                                           // 185\n          var p;                                                                                                       // 186\n          _this.sess(\"totalPages\", total);                                                                             // 187\n          p = _this.currentPage();                                                                                     // 188\n          if ((p == null) || _this.resetOnReload || p > total) {                                                       // 189\n            p = 1;                                                                                                     // 190\n          }                                                                                                            // 191\n          _this.sess(\"currentPage\", false);                                                                            // 192\n          return _this.sess(\"currentPage\", p);                                                                         // 193\n        });                                                                                                            // 194\n      };                                                                                                               // 195\n    })(this));                                                                                                         // 196\n  };                                                                                                                   // 197\n                                                                                                                       // 198\n  Pages.prototype.unsubscribe = function(cb) {                                                                         // 199\n    return this.call(\"Unsubscribe\", (function(_this) {                                                                 // 200\n      return function() {                                                                                              // 201\n        delete _this.initPage;                                                                                         // 202\n        _this.subscriptions = [];                                                                                      // 203\n        _this.requested = {};                                                                                          // 204\n        _this.received = {};                                                                                           // 205\n        _this.queue = [];                                                                                              // 206\n        return typeof cb === \"function\" ? cb() : void 0;                                                               // 207\n      };                                                                                                               // 208\n    })(this));                                                                                                         // 209\n  };                                                                                                                   // 210\n                                                                                                                       // 211\n  Pages.prototype.setDefaults = function() {                                                                           // 212\n    var k, v, _ref, _results;                                                                                          // 213\n    _ref = this.settings;                                                                                              // 214\n    _results = [];                                                                                                     // 215\n    for (k in _ref) {                                                                                                  // 216\n      v = _ref[k];                                                                                                     // 217\n      if (v[2] != null) {                                                                                              // 218\n        _results.push(this[k] != null ? this[k] : this[k] = v[2]);                                                     // 219\n      } else {                                                                                                         // 220\n        _results.push(void 0);                                                                                         // 221\n      }                                                                                                                // 222\n    }                                                                                                                  // 223\n    return _results;                                                                                                   // 224\n  };                                                                                                                   // 225\n                                                                                                                       // 226\n  Pages.prototype.syncSettings = function(cb) {                                                                        // 227\n    var S, k, v, _ref;                                                                                                 // 228\n    S = {};                                                                                                            // 229\n    _ref = this.settings;                                                                                              // 230\n    for (k in _ref) {                                                                                                  // 231\n      v = _ref[k];                                                                                                     // 232\n      if (v[0]) {                                                                                                      // 233\n        S[k] = this[k];                                                                                                // 234\n      }                                                                                                                // 235\n    }                                                                                                                  // 236\n    return this.set(S, cb != null ? {                                                                                  // 237\n      cb: cb.bind(this)                                                                                                // 238\n    } : null);                                                                                                         // 239\n  };                                                                                                                   // 240\n                                                                                                                       // 241\n  Pages.prototype.setMethods = function() {                                                                            // 242\n    var f, n, nm, self, _ref;                                                                                          // 243\n    nm = {};                                                                                                           // 244\n    self = this;                                                                                                       // 245\n    _ref = this.methods;                                                                                               // 246\n    for (n in _ref) {                                                                                                  // 247\n      f = _ref[n];                                                                                                     // 248\n      nm[this.getMethodName(n)] = (function(f) {                                                                       // 249\n        return function() {                                                                                            // 250\n          var arg, k, r, v;                                                                                            // 251\n          arg = (function() {                                                                                          // 252\n            var _results;                                                                                              // 253\n            _results = [];                                                                                             // 254\n            for (k in arguments) {                                                                                     // 255\n              v = arguments[k];                                                                                        // 256\n              _results.push(v);                                                                                        // 257\n            }                                                                                                          // 258\n            return _results;                                                                                           // 259\n          }).apply(this, arguments);                                                                                   // 260\n          arg.push(this);                                                                                              // 261\n          this.get = (function(self, k) {                                                                              // 262\n            return self.get(k, this.connection.id);                                                                    // 263\n          }).bind(this, self);                                                                                         // 264\n          r = f.apply(self, arg);                                                                                      // 265\n          return r;                                                                                                    // 266\n        };                                                                                                             // 267\n      })(f);                                                                                                           // 268\n    }                                                                                                                  // 269\n    return Meteor.methods(nm);                                                                                         // 270\n  };                                                                                                                   // 271\n                                                                                                                       // 272\n  Pages.prototype.getMethodName = function(name) {                                                                     // 273\n    return \"\" + this.id + \"/\" + name;                                                                                  // 274\n  };                                                                                                                   // 275\n                                                                                                                       // 276\n  Pages.prototype.call = function() {                                                                                  // 277\n    var args, last;                                                                                                    // 278\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];                                                    // 279\n    check(args, Array);                                                                                                // 280\n    if (args.length < 1) {                                                                                             // 281\n      this.error(4001, \"Method name not provided in a method call.\");                                                  // 282\n    }                                                                                                                  // 283\n    args[0] = this.getMethodName(args[0]);                                                                             // 284\n    last = args.length - 1;                                                                                            // 285\n    if (_.isFunction(args[last])) {                                                                                    // 286\n      args[last] = args[last].bind(this);                                                                              // 287\n    }                                                                                                                  // 288\n    return Meteor.call.apply(this, args);                                                                              // 289\n  };                                                                                                                   // 290\n                                                                                                                       // 291\n  Pages.prototype.sess = function(k, v) {                                                                              // 292\n    if (typeof Session === \"undefined\" || Session === null) {                                                          // 293\n      return;                                                                                                          // 294\n    }                                                                                                                  // 295\n    k = \"\" + this.id + \".\" + k;                                                                                        // 296\n    if (arguments.length === 2) {                                                                                      // 297\n      return Session.set(k, v);                                                                                        // 298\n    } else {                                                                                                           // 299\n      return Session.get(k);                                                                                           // 300\n    }                                                                                                                  // 301\n  };                                                                                                                   // 302\n                                                                                                                       // 303\n  Pages.prototype.get = function(setting, connectionId) {                                                              // 304\n    var _ref, _ref1;                                                                                                   // 305\n    return (_ref = (_ref1 = this.userSettings[connectionId]) != null ? _ref1[setting] : void 0) != null ? _ref : this[setting];\n  };                                                                                                                   // 307\n                                                                                                                       // 308\n  Pages.prototype.set = function() {                                                                                   // 309\n    var ch, k, opts, _k, _v;                                                                                           // 310\n    k = arguments[0], opts = 2 <= arguments.length ? __slice.call(arguments, 1) : [];                                  // 311\n    ch = 0;                                                                                                            // 312\n    switch (opts.length) {                                                                                             // 313\n      case 0:                                                                                                          // 314\n        if (_.isObject(k)) {                                                                                           // 315\n          for (_k in k) {                                                                                              // 316\n            _v = k[_k];                                                                                                // 317\n            ch += this._set(_k, _v);                                                                                   // 318\n          }                                                                                                            // 319\n        }                                                                                                              // 320\n        break;                                                                                                         // 321\n      case 1:                                                                                                          // 322\n        if (_.isObject(k)) {                                                                                           // 323\n          if (_.isFunction(opts[0])) {                                                                                 // 324\n            opts[0] = {                                                                                                // 325\n              cb: opts[0]                                                                                              // 326\n            };                                                                                                         // 327\n          }                                                                                                            // 328\n          for (_k in k) {                                                                                              // 329\n            _v = k[_k];                                                                                                // 330\n            ch += this._set(_k, _v, opts[0]);                                                                          // 331\n          }                                                                                                            // 332\n        } else {                                                                                                       // 333\n          check(k, String);                                                                                            // 334\n          ch = this._set(k, opts[0]);                                                                                  // 335\n        }                                                                                                              // 336\n        break;                                                                                                         // 337\n      case 2:                                                                                                          // 338\n        if (_.isFunction(opts[1])) {                                                                                   // 339\n          opts[1] = {                                                                                                  // 340\n            cb: opts[1]                                                                                                // 341\n          };                                                                                                           // 342\n        }                                                                                                              // 343\n        ch = this._set(k, opts[0], opts[1]);                                                                           // 344\n        break;                                                                                                         // 345\n      case 3:                                                                                                          // 346\n        check(opts[1], Object);                                                                                        // 347\n        check(opts[2], Function);                                                                                      // 348\n        opts[2] = {                                                                                                    // 349\n          cb: opts[2]                                                                                                  // 350\n        };                                                                                                             // 351\n        ch = this._set(k, opts[1], opts[2]);                                                                           // 352\n    }                                                                                                                  // 353\n    if (Meteor.isClient && ch) {                                                                                       // 354\n      this.reload();                                                                                                   // 355\n    }                                                                                                                  // 356\n    return ch;                                                                                                         // 357\n  };                                                                                                                   // 358\n                                                                                                                       // 359\n  Pages.prototype.setInitial = function(settings) {                                                                    // 360\n    this.setInitDone = false;                                                                                          // 361\n    this.set(settings);                                                                                                // 362\n    return this.setInitDone = true;                                                                                    // 363\n  };                                                                                                                   // 364\n                                                                                                                       // 365\n  Pages.prototype.sanitizeRegex = function(v) {                                                                        // 366\n    var lis;                                                                                                           // 367\n    if (_.isRegExp(v)) {                                                                                               // 368\n      v = v.toString();                                                                                                // 369\n      lis = v.lastIndexOf(\"/\");                                                                                        // 370\n      v = {                                                                                                            // 371\n        $regex: v.slice(1, lis),                                                                                       // 372\n        $options: v.slice(1 + lis)                                                                                     // 373\n      };                                                                                                               // 374\n    }                                                                                                                  // 375\n    return v;                                                                                                          // 376\n  };                                                                                                                   // 377\n                                                                                                                       // 378\n  Pages.prototype.sanitizeRegexObj = function(obj) {                                                                   // 379\n    var k, v;                                                                                                          // 380\n    if (_.isRegExp(obj)) {                                                                                             // 381\n      return this.sanitizeRegex(obj);                                                                                  // 382\n    }                                                                                                                  // 383\n    for (k in obj) {                                                                                                   // 384\n      v = obj[k];                                                                                                      // 385\n      if (_.isRegExp(v)) {                                                                                             // 386\n        obj[k] = this.sanitizeRegex(v);                                                                                // 387\n      } else if (\"object\" === typeof v) {                                                                              // 388\n        obj[k] = this.sanitizeRegexObj(v);                                                                             // 389\n      }                                                                                                                // 390\n    }                                                                                                                  // 391\n    return obj;                                                                                                        // 392\n  };                                                                                                                   // 393\n                                                                                                                       // 394\n  Pages.prototype._set = function(k, v, opts) {                                                                        // 395\n    var ch, oldV, _base, _name, _ref, _ref1, _ref2;                                                                    // 396\n    if (opts == null) {                                                                                                // 397\n      opts = {};                                                                                                       // 398\n    }                                                                                                                  // 399\n    check(k, String);                                                                                                  // 400\n    ch = 1;                                                                                                            // 401\n    if (Meteor.isServer || (this[k] == null) || ((_ref = this.settings[k]) != null ? _ref[0] : void 0) || opts.init) {\n      if ((((_ref1 = this.settings[k]) != null ? _ref1[1] : void 0) != null) && ((_ref2 = this.settings[k]) != null ? _ref2[1] : void 0) !== true) {\n        check(v, this.settings[k][1]);                                                                                 // 404\n      }                                                                                                                // 405\n      this.sanitizeRegexObj(v);                                                                                        // 406\n      oldV = this.get(k, opts != null ? opts.cid : void 0);                                                            // 407\n      if (this.valuesEqual(v, oldV)) {                                                                                 // 408\n        return 0;                                                                                                      // 409\n      }                                                                                                                // 410\n      if (Meteor.isClient) {                                                                                           // 411\n        this[k] = v;                                                                                                   // 412\n        if (this.setInitDone) {                                                                                        // 413\n          this.call(\"Set\", k, v, function(e, r) {                                                                      // 414\n            if (e) {                                                                                                   // 415\n              this[k] = oldV;                                                                                          // 416\n              return this.onDeniedSetting.call(this, k, v, e);                                                         // 417\n            }                                                                                                          // 418\n            return typeof opts.cb === \"function\" ? opts.cb(ch) : void 0;                                               // 419\n          });                                                                                                          // 420\n        }                                                                                                              // 421\n      } else {                                                                                                         // 422\n        if (opts.cid) {                                                                                                // 423\n          if (ch != null) {                                                                                            // 424\n            if ((_base = this.userSettings)[_name = opts.cid] == null) {                                               // 425\n              _base[_name] = {};                                                                                       // 426\n            }                                                                                                          // 427\n            this.userSettings[opts.cid][k] = v;                                                                        // 428\n          }                                                                                                            // 429\n        } else {                                                                                                       // 430\n          this[k] = v;                                                                                                 // 431\n        }                                                                                                              // 432\n        if (typeof opts.cb === \"function\") {                                                                           // 433\n          opts.cb(ch);                                                                                                 // 434\n        }                                                                                                              // 435\n      }                                                                                                                // 436\n    } else {                                                                                                           // 437\n      this.onDeniedSetting.call(this, k, v);                                                                           // 438\n    }                                                                                                                  // 439\n    return ch;                                                                                                         // 440\n  };                                                                                                                   // 441\n                                                                                                                       // 442\n  Pages.prototype.valuesEqual = function(v1, v2) {                                                                     // 443\n    if (_.isFunction(v1)) {                                                                                            // 444\n      return _.isFunction(v2) && v1.toString() === v2.toString();                                                      // 445\n    } else {                                                                                                           // 446\n      return _.isEqual(v1, v2);                                                                                        // 447\n    }                                                                                                                  // 448\n  };                                                                                                                   // 449\n                                                                                                                       // 450\n  Pages.prototype.setId = function(name) {                                                                             // 451\n    var n;                                                                                                             // 452\n    if (this.templateName) {                                                                                           // 453\n      name = this.templateName;                                                                                        // 454\n    }                                                                                                                  // 455\n    while (name in Pages.prototype.instances) {                                                                        // 456\n      n = name.match(/[0-9]+$/);                                                                                       // 457\n      if (n != null) {                                                                                                 // 458\n        name = name.slice(0, name.length - n[0].length) + (parseInt(n) + 1);                                           // 459\n      } else {                                                                                                         // 460\n        name = name + \"2\";                                                                                             // 461\n      }                                                                                                                // 462\n    }                                                                                                                  // 463\n    this.id = \"pages_\" + name;                                                                                         // 464\n    return this.name = name;                                                                                           // 465\n  };                                                                                                                   // 466\n                                                                                                                       // 467\n  Pages.prototype.registerInstance = function() {                                                                      // 468\n    Pages.prototype._nInstances++;                                                                                     // 469\n    return Pages.prototype.instances[this.name] = this;                                                                // 470\n  };                                                                                                                   // 471\n                                                                                                                       // 472\n  Pages.prototype.setCollection = function(collection) {                                                               // 473\n    var e;                                                                                                             // 474\n    if (typeof collection === \"object\") {                                                                              // 475\n      Pages.prototype.collections[collection._name] = collection;                                                      // 476\n      this.Collection = collection;                                                                                    // 477\n    } else {                                                                                                           // 478\n      try {                                                                                                            // 479\n        this.Collection = new Mongo.Collection(collection);                                                            // 480\n        Pages.prototype.collections[collection] = this.Collection;                                                     // 481\n      } catch (_error) {                                                                                               // 482\n        e = _error;                                                                                                    // 483\n        this.Collection = Pages.prototype.collections[collection];                                                     // 484\n        this.Collection instanceof Mongo.Collection || this.error(4000, \"The '\" + collection + \"' collection was created outside of <Meteor.Pagination>. Pass the collection object instead of the collection's name to the <Meteor.Pagination> constructor.\");\n      }                                                                                                                // 486\n    }                                                                                                                  // 487\n    this.setId(this.Collection._name);                                                                                 // 488\n    return this.PaginatedCollection = new Mongo.Collection(this.id);                                                   // 489\n  };                                                                                                                   // 490\n                                                                                                                       // 491\n  Pages.prototype.linkTo = function(page) {                                                                            // 492\n    var params, _ref;                                                                                                  // 493\n    if ((_ref = Router.current()) != null ? _ref.params : void 0) {                                                    // 494\n      params = Router.current().params;                                                                                // 495\n      params.page = page;                                                                                              // 496\n      return Router.routes[\"\" + this.name + \"_page\"].path(params);                                                     // 497\n    }                                                                                                                  // 498\n  };                                                                                                                   // 499\n                                                                                                                       // 500\n  Pages.prototype.setRouter = function() {                                                                             // 501\n    var init, l, pr, self, t, _ref;                                                                                    // 502\n    if (this.router === \"iron-router\") {                                                                               // 503\n      if (this.route.indexOf(\":page\") === -1) {                                                                        // 504\n        if (this.route[0] !== \"/\") {                                                                                   // 505\n          this.route = \"/\" + this.route;                                                                               // 506\n        }                                                                                                              // 507\n        if (this.route[this.route.length - 1] !== \"/\") {                                                               // 508\n          this.route += \"/\";                                                                                           // 509\n        }                                                                                                              // 510\n        pr = this.route = \"\" + this.route + \":page\";                                                                   // 511\n      }                                                                                                                // 512\n      t = this.routerTemplate;                                                                                         // 513\n      l = (_ref = this.routerLayout) != null ? _ref : void 0;                                                          // 514\n      self = this;                                                                                                     // 515\n      init = true;                                                                                                     // 516\n      Router.map(function() {                                                                                          // 517\n        var hr, k, _i, _len, _ref1, _results;                                                                          // 518\n        if (!self.infinite) {                                                                                          // 519\n          this.route(\"\" + self.name + \"_page\", {                                                                       // 520\n            path: pr,                                                                                                  // 521\n            template: t,                                                                                               // 522\n            layoutTemplate: l,                                                                                         // 523\n            onBeforeAction: function() {                                                                               // 524\n              var page;                                                                                                // 525\n              page = parseInt(this.params.page);                                                                       // 526\n              if (self.init) {                                                                                         // 527\n                self.sess(\"oldPage\", page);                                                                            // 528\n                self.sess(\"currentPage\", page);                                                                        // 529\n              }                                                                                                        // 530\n              if (self.routeSettings != null) {                                                                        // 531\n                self.routeSettings(this);                                                                              // 532\n              }                                                                                                        // 533\n              Tracker.nonreactive((function(_this) {                                                                   // 534\n                return function() {                                                                                    // 535\n                  return self.onNavClick(page);                                                                        // 536\n                };                                                                                                     // 537\n              })(this));                                                                                               // 538\n              return this.next();                                                                                      // 539\n            }                                                                                                          // 540\n          });                                                                                                          // 541\n        }                                                                                                              // 542\n        if (self.homeRoute) {                                                                                          // 543\n          if (_.isString(self.homeRoute)) {                                                                            // 544\n            self.homeRoute = [self.homeRoute];                                                                         // 545\n          }                                                                                                            // 546\n          _ref1 = self.homeRoute;                                                                                      // 547\n          _results = [];                                                                                               // 548\n          for (k = _i = 0, _len = _ref1.length; _i < _len; k = ++_i) {                                                 // 549\n            hr = _ref1[k];                                                                                             // 550\n            _results.push(this.route(\"\" + self.name + \"_home\" + k, {                                                   // 551\n              path: hr,                                                                                                // 552\n              template: t,                                                                                             // 553\n              layoutTemplate: l,                                                                                       // 554\n              onBeforeAction: function() {                                                                             // 555\n                if (self.routeSettings != null) {                                                                      // 556\n                  self.routeSettings(this);                                                                            // 557\n                }                                                                                                      // 558\n                if (self.init) {                                                                                       // 559\n                  self.sess(\"oldPage\", 1);                                                                             // 560\n                  self.sess(\"currentPage\", 1);                                                                         // 561\n                }                                                                                                      // 562\n                return this.next();                                                                                    // 563\n              }                                                                                                        // 564\n            }));                                                                                                       // 565\n          }                                                                                                            // 566\n          return _results;                                                                                             // 567\n        }                                                                                                              // 568\n      });                                                                                                              // 569\n      if (Meteor.isServer && this.fastRender) {                                                                        // 570\n        self = this;                                                                                                   // 571\n        FastRender.route(pr, function(params) {                                                                        // 572\n          return this.subscribe(self.id, parseInt(params.page));                                                       // 573\n        });                                                                                                            // 574\n        return FastRender.route(this.homeRoute, function() {                                                           // 575\n          return this.subscribe(self.id, 1);                                                                           // 576\n        });                                                                                                            // 577\n      }                                                                                                                // 578\n    }                                                                                                                  // 579\n  };                                                                                                                   // 580\n                                                                                                                       // 581\n  Pages.prototype.setPerPage = function() {                                                                            // 582\n    return this.perPage = this.pageSizeLimit < this.perPage ? this.pageSizeLimit : this.perPage;                       // 583\n  };                                                                                                                   // 584\n                                                                                                                       // 585\n  Pages.prototype.setTemplates = function() {                                                                          // 586\n    var i, name, tn, _i, _len, _ref;                                                                                   // 587\n    name = this.templateName || this.name;                                                                             // 588\n    if (this.table && this.itemTemplate === \"_pagesItemDefault\") {                                                     // 589\n      this.itemTemplate = this.tableItemTemplate;                                                                      // 590\n    }                                                                                                                  // 591\n    _ref = [this.navTemplate, this.pageTemplate, this.itemTemplate, this.tableTemplate];                               // 592\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                                // 593\n      i = _ref[_i];                                                                                                    // 594\n      tn = this.id + i;                                                                                                // 595\n      Template[tn] = new Blaze.Template(\"Template.\" + tn, Template[i].renderFunction);                                 // 596\n      Template[tn].helpers(_TemplateHelpers[i]);                                                                       // 597\n      Template[tn].events(_TemplateEvents[i]);                                                                         // 598\n      Template[tn].helpers({                                                                                           // 599\n        pagesData: this                                                                                                // 600\n      });                                                                                                              // 601\n    }                                                                                                                  // 602\n    return Template[name].helpers({                                                                                    // 603\n      pagesData: this,                                                                                                 // 604\n      pagesNav: Template[this.id + this.navTemplate],                                                                  // 605\n      pages: Template[this.id + this.pageTemplate]                                                                     // 606\n    });                                                                                                                // 607\n  };                                                                                                                   // 608\n                                                                                                                       // 609\n  Pages.prototype.countPages = _.throttle(function() {                                                                 // 610\n    return this.call(\"CountPages\", (function(e, r) {                                                                   // 611\n      this.sess(\"totalPages\", r);                                                                                      // 612\n      if (this.sess(\"currentPage\") > r) {                                                                              // 613\n        return this.sess(\"currentPage\", 1);                                                                            // 614\n      }                                                                                                                // 615\n    }).bind(this));                                                                                                    // 616\n  }, 500);                                                                                                             // 617\n                                                                                                                       // 618\n  Pages.prototype.publish = function(page, sub) {                                                                      // 619\n    var c, cid, filters, get, handle, handle2, init, n, options, r, self, set, skip, _ref, _ref1;                      // 620\n    check(page, Number);                                                                                               // 621\n    check(sub, Match.Where(function(s) {                                                                               // 622\n      return s.ready != null;                                                                                          // 623\n    }));                                                                                                               // 624\n    cid = sub.connection.id;                                                                                           // 625\n    get = sub.get = (function(cid, k) {                                                                                // 626\n      return this.get(k, cid);                                                                                         // 627\n    }).bind(this, cid);                                                                                                // 628\n    set = sub.set = (function(cid, k, v) {                                                                             // 629\n      return this.set(k, v, {                                                                                          // 630\n        cid: cid                                                                                                       // 631\n      });                                                                                                              // 632\n    }).bind(this, cid);                                                                                                // 633\n    if ((_ref = this.userSettings[cid]) != null) {                                                                     // 634\n      delete _ref.realFilters;                                                                                         // 635\n    }                                                                                                                  // 636\n    if ((_ref1 = this.userSettings[cid]) != null) {                                                                    // 637\n      delete _ref1.nPublishedPages;                                                                                    // 638\n    }                                                                                                                  // 639\n    this.setPerPage();                                                                                                 // 640\n    skip = (page - 1) * get(\"perPage\");                                                                                // 641\n    if (skip < 0) {                                                                                                    // 642\n      skip = 0;                                                                                                        // 643\n    }                                                                                                                  // 644\n    filters = get(\"filters\");                                                                                          // 645\n    options = {                                                                                                        // 646\n      sort: get(\"sort\"),                                                                                               // 647\n      fields: get(\"fields\"),                                                                                           // 648\n      skip: skip,                                                                                                      // 649\n      limit: get(\"perPage\")                                                                                            // 650\n    };                                                                                                                 // 651\n    if (this.auth != null) {                                                                                           // 652\n      r = this.auth.call(this, skip, sub);                                                                             // 653\n      if (!r) {                                                                                                        // 654\n        set(\"nPublishedPages\", 0);                                                                                     // 655\n        sub.ready();                                                                                                   // 656\n        return this.ready();                                                                                           // 657\n      } else if (_.isNumber(r)) {                                                                                      // 658\n        set(\"nPublishedPages\", r);                                                                                     // 659\n        if (page > r) {                                                                                                // 660\n          sub.ready();                                                                                                 // 661\n          return this.ready();                                                                                         // 662\n        }                                                                                                              // 663\n      } else if (_.isArray(r) && r.length === 2) {                                                                     // 664\n        if (_.isFunction(r[0].fetch)) {                                                                                // 665\n          c = r;                                                                                                       // 666\n        } else {                                                                                                       // 667\n          filters = r[0];                                                                                              // 668\n          options = r[1];                                                                                              // 669\n        }                                                                                                              // 670\n      } else if (_.isFunction(r.fetch)) {                                                                              // 671\n        c = r;                                                                                                         // 672\n      }                                                                                                                // 673\n    }                                                                                                                  // 674\n    if (!EJSON.equals({}, filters) && !EJSON.equals(get(\"filters\"), filters)) {                                        // 675\n      set(\"realFilters\", filters);                                                                                     // 676\n    }                                                                                                                  // 677\n    if (c == null) {                                                                                                   // 678\n      c = this.Collection.find(filters, options);                                                                      // 679\n    }                                                                                                                  // 680\n    init = true;                                                                                                       // 681\n    self = this;                                                                                                       // 682\n    handle = c.observe({                                                                                               // 683\n      addedAt: (function(sub, doc, at) {                                                                               // 684\n        var e, id;                                                                                                     // 685\n        try {                                                                                                          // 686\n          doc[\"_\" + this.id + \"_p\"] = page;                                                                            // 687\n          doc[\"_\" + this.id + \"_i\"] = at;                                                                              // 688\n          id = doc._id;                                                                                                // 689\n          delete doc._id;                                                                                              // 690\n          if (!init) {                                                                                                 // 691\n            sub.added(this.id, id, doc);                                                                               // 692\n            return (this.Collection.find(get(\"filters\"), {                                                             // 693\n              sort: get(\"sort\"),                                                                                       // 694\n              fields: get(\"fields\"),                                                                                   // 695\n              skip: skip,                                                                                              // 696\n              limit: get(\"perPage\")                                                                                    // 697\n            })).forEach((function(_this) {                                                                             // 698\n              return function(o, i) {                                                                                  // 699\n                if (i >= at) {                                                                                         // 700\n                  return sub.changed(_this.id, o._id, _.object([[\"_\" + _this.id + \"_i\", i + 1]]));                     // 701\n                }                                                                                                      // 702\n              };                                                                                                       // 703\n            })(this));                                                                                                 // 704\n          }                                                                                                            // 705\n        } catch (_error) {                                                                                             // 706\n          e = _error;                                                                                                  // 707\n        }                                                                                                              // 708\n      }).bind(this, sub)                                                                                               // 709\n    });                                                                                                                // 710\n    handle2 = c.observeChanges({                                                                                       // 711\n      movedBefore: (function(sub, id, before) {                                                                        // 712\n        var at, ref;                                                                                                   // 713\n        at = -1;                                                                                                       // 714\n        ref = false;                                                                                                   // 715\n        (this.Collection.find(get(\"filters\"), {                                                                        // 716\n          sort: get(\"sort\"),                                                                                           // 717\n          fields: get(\"fields\"),                                                                                       // 718\n          skip: skip,                                                                                                  // 719\n          limit: get(\"perPage\")                                                                                        // 720\n        })).forEach((function(_this) {                                                                                 // 721\n          return function(o, i) {                                                                                      // 722\n            if (ref) {                                                                                                 // 723\n              return sub.changed(_this.id, o._id, _.object([[\"_\" + _this.id + \"_i\", i + 1]]));                         // 724\n            } else if (o._id === before) {                                                                             // 725\n              ref = true;                                                                                              // 726\n              return at = i;                                                                                           // 727\n            }                                                                                                          // 728\n          };                                                                                                           // 729\n        })(this));                                                                                                     // 730\n        return sub.changed(this.id, id, _.object([[\"_\" + this.id + \"_i\", at]]));                                       // 731\n      }).bind(this, sub),                                                                                              // 732\n      changed: (function(sub, id, fields) {                                                                            // 733\n        var e;                                                                                                         // 734\n        try {                                                                                                          // 735\n          return sub.changed(this.id, id, fields);                                                                     // 736\n        } catch (_error) {                                                                                             // 737\n          e = _error;                                                                                                  // 738\n        }                                                                                                              // 739\n      }).bind(this, sub),                                                                                              // 740\n      removed: (function(sub, id) {                                                                                    // 741\n        var e;                                                                                                         // 742\n        try {                                                                                                          // 743\n          return sub.removed(this.id, id);                                                                             // 744\n        } catch (_error) {                                                                                             // 745\n          e = _error;                                                                                                  // 746\n        }                                                                                                              // 747\n      }).bind(this, sub)                                                                                               // 748\n    });                                                                                                                // 749\n    n = 0;                                                                                                             // 750\n    c.forEach((function(doc, index, cursor) {                                                                          // 751\n      n++;                                                                                                             // 752\n      doc[\"_\" + this.id + \"_p\"] = page;                                                                                // 753\n      doc[\"_\" + this.id + \"_i\"] = index;                                                                               // 754\n      return sub.added(this.id, doc._id, doc);                                                                         // 755\n    }).bind(this));                                                                                                    // 756\n    init = false;                                                                                                      // 757\n    sub.onStop(function() {                                                                                            // 758\n      handle.stop();                                                                                                   // 759\n      return handle2.stop();                                                                                           // 760\n    });                                                                                                                // 761\n    this.ready();                                                                                                      // 762\n    this.subscriptions.push(sub);                                                                                      // 763\n    return c;                                                                                                          // 764\n  };                                                                                                                   // 765\n                                                                                                                       // 766\n  Pages.prototype.loading = function(p) {                                                                              // 767\n    if (!this.fastRender && p === this.currentPage()) {                                                                // 768\n      return this.sess(\"ready\", false);                                                                                // 769\n    }                                                                                                                  // 770\n  };                                                                                                                   // 771\n                                                                                                                       // 772\n  Pages.prototype.now = function() {                                                                                   // 773\n    return (new Date()).getTime();                                                                                     // 774\n  };                                                                                                                   // 775\n                                                                                                                       // 776\n  Pages.prototype.log = function(msg) {                                                                                // 777\n    return console.log(\"\" + this.name + \" \" + msg);                                                                    // 778\n  };                                                                                                                   // 779\n                                                                                                                       // 780\n  Pages.prototype.logRequest = function(p) {                                                                           // 781\n    this.timeLastRequest = this.now();                                                                                 // 782\n    this.requesting = p;                                                                                               // 783\n    return this.requested[p] = 1;                                                                                      // 784\n  };                                                                                                                   // 785\n                                                                                                                       // 786\n  Pages.prototype.logResponse = function(p) {                                                                          // 787\n    delete this.requested[p];                                                                                          // 788\n    return this.received[p] = 1;                                                                                       // 789\n  };                                                                                                                   // 790\n                                                                                                                       // 791\n  Pages.prototype.clearQueue = function() {                                                                            // 792\n    return this.queue = [];                                                                                            // 793\n  };                                                                                                                   // 794\n                                                                                                                       // 795\n  Pages.prototype.neighbors = function(page) {                                                                         // 796\n    var d, np, pp, _i, _ref;                                                                                           // 797\n    this.n = [];                                                                                                       // 798\n    if (this.dataMargin === 0) {                                                                                       // 799\n      return this.n;                                                                                                   // 800\n    }                                                                                                                  // 801\n    for (d = _i = 1, _ref = this.dataMargin; 1 <= _ref ? _i <= _ref : _i >= _ref; d = 1 <= _ref ? ++_i : --_i) {       // 802\n      np = page + d;                                                                                                   // 803\n      if (np <= this.sess(\"totalPages\")) {                                                                             // 804\n        this.n.push(np);                                                                                               // 805\n      }                                                                                                                // 806\n      pp = page - d;                                                                                                   // 807\n      if (pp > 0) {                                                                                                    // 808\n        this.n.push(pp);                                                                                               // 809\n      }                                                                                                                // 810\n    }                                                                                                                  // 811\n    return this.n;                                                                                                     // 812\n  };                                                                                                                   // 813\n                                                                                                                       // 814\n  Pages.prototype.queueNeighbors = function(page) {                                                                    // 815\n    var p, _i, _len, _ref, _results;                                                                                   // 816\n    _ref = this.neighbors(page);                                                                                       // 817\n    _results = [];                                                                                                     // 818\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                                // 819\n      p = _ref[_i];                                                                                                    // 820\n      if (!this.received[p] && !this.requested[p]) {                                                                   // 821\n        _results.push(this.queue.push(p));                                                                             // 822\n      } else {                                                                                                         // 823\n        _results.push(void 0);                                                                                         // 824\n      }                                                                                                                // 825\n    }                                                                                                                  // 826\n    return _results;                                                                                                   // 827\n  };                                                                                                                   // 828\n                                                                                                                       // 829\n  Pages.prototype.paginationNavItem = function(label, page, disabled, active) {                                        // 830\n    if (active == null) {                                                                                              // 831\n      active = false;                                                                                                  // 832\n    }                                                                                                                  // 833\n    return {                                                                                                           // 834\n      p: label,                                                                                                        // 835\n      n: page,                                                                                                         // 836\n      active: active ? \"active\" : \"\",                                                                                  // 837\n      disabled: disabled ? \"disabled\" : \"\"                                                                             // 838\n    };                                                                                                                 // 839\n  };                                                                                                                   // 840\n                                                                                                                       // 841\n  Pages.prototype.paginationNeighbors = function() {                                                                   // 842\n    var from, i, k, n, p, page, to, total, _i, _j, _len;                                                               // 843\n    page = this.currentPage();                                                                                         // 844\n    total = this.sess(\"totalPages\");                                                                                   // 845\n    from = page - this.paginationMargin;                                                                               // 846\n    to = page + this.paginationMargin;                                                                                 // 847\n    if (from < 1) {                                                                                                    // 848\n      to += 1 - from;                                                                                                  // 849\n      from = 1;                                                                                                        // 850\n    }                                                                                                                  // 851\n    if (to > total) {                                                                                                  // 852\n      from -= to - total;                                                                                              // 853\n      to = total;                                                                                                      // 854\n    }                                                                                                                  // 855\n    if (from < 1) {                                                                                                    // 856\n      from = 1;                                                                                                        // 857\n    }                                                                                                                  // 858\n    if (to > total) {                                                                                                  // 859\n      to = total;                                                                                                      // 860\n    }                                                                                                                  // 861\n    n = [];                                                                                                            // 862\n    if (this.navShowFirst || this.navShowEdges) {                                                                      // 863\n      n.push(this.paginationNavItem(\"«\", 1, page === 1));                                                              // 864\n    }                                                                                                                  // 865\n    n.push(this.paginationNavItem(\"<\", page - 1, page === 1));                                                         // 866\n    for (p = _i = from; from <= to ? _i <= to : _i >= to; p = from <= to ? ++_i : --_i) {                              // 867\n      n.push(this.paginationNavItem(p, p, page > total, p === page));                                                  // 868\n    }                                                                                                                  // 869\n    n.push(this.paginationNavItem(\">\", page + 1, page >= total));                                                      // 870\n    if (this.navShowLast || this.navShowEdges) {                                                                       // 871\n      n.push(this.paginationNavItem(\"»\", total, page >= total));                                                       // 872\n    }                                                                                                                  // 873\n    for (k = _j = 0, _len = n.length; _j < _len; k = ++_j) {                                                           // 874\n      i = n[k];                                                                                                        // 875\n      n[k]['_p'] = this;                                                                                               // 876\n    }                                                                                                                  // 877\n    return n;                                                                                                          // 878\n  };                                                                                                                   // 879\n                                                                                                                       // 880\n  Pages.prototype.onNavClick = function(n) {                                                                           // 881\n    if (n <= this.sess(\"totalPages\") && n > 0) {                                                                       // 882\n      Tracker.nonreactive((function(_this) {                                                                           // 883\n        return function() {                                                                                            // 884\n          var cp;                                                                                                      // 885\n          cp = _this.sess(\"currentPage\");                                                                              // 886\n          if (_this.received[cp]) {                                                                                    // 887\n            return _this.sess(\"oldPage\", cp);                                                                          // 888\n          }                                                                                                            // 889\n        };                                                                                                             // 890\n      })(this));                                                                                                       // 891\n      return this.sess(\"currentPage\", n);                                                                              // 892\n    }                                                                                                                  // 893\n  };                                                                                                                   // 894\n                                                                                                                       // 895\n  Pages.prototype.setInfiniteTrigger = function() {                                                                    // 896\n    return $(window).scroll((_.throttle(function() {                                                                   // 897\n      var l, oh, t;                                                                                                    // 898\n      t = this.infiniteTrigger;                                                                                        // 899\n      oh = document.body.offsetHeight;                                                                                 // 900\n      if (t > 1) {                                                                                                     // 901\n        l = oh - t;                                                                                                    // 902\n      } else if (t > 0) {                                                                                              // 903\n        l = oh * t;                                                                                                    // 904\n      } else {                                                                                                         // 905\n        return;                                                                                                        // 906\n      }                                                                                                                // 907\n      if ((window.innerHeight + window.scrollY) >= l) {                                                                // 908\n        if (this.lastPage < this.sess(\"totalPages\")) {                                                                 // 909\n          return this.sess(\"currentPage\", this.lastPage + 1);                                                          // 910\n        }                                                                                                              // 911\n      }                                                                                                                // 912\n    }, this.infiniteRateLimit * 1000)).bind(this));                                                                    // 913\n  };                                                                                                                   // 914\n                                                                                                                       // 915\n  Pages.prototype.checkQueue = _.throttle(function() {                                                                 // 916\n    var cp, i, k, neighbors, v, _ref, _results, _results1;                                                             // 917\n    cp = this.currentPage();                                                                                           // 918\n    neighbors = this.neighbors(cp);                                                                                    // 919\n    if (!this.received[cp]) {                                                                                          // 920\n      this.clearQueue();                                                                                               // 921\n      this.requestPage(cp);                                                                                            // 922\n      cp = String(cp);                                                                                                 // 923\n      _ref = this.requested;                                                                                           // 924\n      _results = [];                                                                                                   // 925\n      for (k in _ref) {                                                                                                // 926\n        v = _ref[k];                                                                                                   // 927\n        if (k !== cp) {                                                                                                // 928\n          if (this.subscriptions[k] != null) {                                                                         // 929\n            this.subscriptions[k].stop();                                                                              // 930\n            delete this.subscriptions[k];                                                                              // 931\n          }                                                                                                            // 932\n          _results.push(delete this.requested[k]);                                                                     // 933\n        } else {                                                                                                       // 934\n          _results.push(void 0);                                                                                       // 935\n        }                                                                                                              // 936\n      }                                                                                                                // 937\n      return _results;                                                                                                 // 938\n    } else if (this.queue.length) {                                                                                    // 939\n      _results1 = [];                                                                                                  // 940\n      while (this.queue.length > 0) {                                                                                  // 941\n        i = this.queue.shift();                                                                                        // 942\n        if (__indexOf.call(neighbors, i) >= 0) {                                                                       // 943\n          this.requestPage(i);                                                                                         // 944\n          break;                                                                                                       // 945\n        } else {                                                                                                       // 946\n          _results1.push(void 0);                                                                                      // 947\n        }                                                                                                              // 948\n      }                                                                                                                // 949\n      return _results1;                                                                                                // 950\n    }                                                                                                                  // 951\n  }, 500);                                                                                                             // 952\n                                                                                                                       // 953\n  Pages.prototype.currentPage = function() {                                                                           // 954\n    if (Meteor.isClient && (this.sess(\"currentPage\") != null)) {                                                       // 955\n      return this.sess(\"currentPage\");                                                                                 // 956\n    } else {                                                                                                           // 957\n      return this._currentPage;                                                                                        // 958\n    }                                                                                                                  // 959\n  };                                                                                                                   // 960\n                                                                                                                       // 961\n  Pages.prototype.isReady = function() {                                                                               // 962\n    return this.sess(\"ready\");                                                                                         // 963\n  };                                                                                                                   // 964\n                                                                                                                       // 965\n  Pages.prototype.ready = function(p) {                                                                                // 966\n    if (p === true || p === this.currentPage() && (typeof Session !== \"undefined\" && Session !== null)) {              // 967\n      return this.sess(\"ready\", true);                                                                                 // 968\n    }                                                                                                                  // 969\n  };                                                                                                                   // 970\n                                                                                                                       // 971\n  Pages.prototype.checkInitPage = function() {                                                                         // 972\n    var _ref, _ref1, _ref2;                                                                                            // 973\n    if (this.init) {                                                                                                   // 974\n      if (this.router) {                                                                                               // 975\n        if ((_ref = Router.current()) != null) {                                                                       // 976\n          if ((_ref1 = _ref.route) != null) {                                                                          // 977\n            _ref1.getName();                                                                                           // 978\n          }                                                                                                            // 979\n        }                                                                                                              // 980\n        try {                                                                                                          // 981\n          this.initPage = parseInt((_ref2 = Router.current().route.params(location.href)) != null ? _ref2.page : void 0) || 1;\n          this.init = false;                                                                                           // 983\n        } catch (_error) {                                                                                             // 984\n          return;                                                                                                      // 985\n        }                                                                                                              // 986\n      } else {                                                                                                         // 987\n        this.initPage = 1;                                                                                             // 988\n        this.init = false;                                                                                             // 989\n      }                                                                                                                // 990\n    }                                                                                                                  // 991\n    this.sess(\"oldPage\", this.initPage);                                                                               // 992\n    return this.sess(\"currentPage\", this.initPage);                                                                    // 993\n  };                                                                                                                   // 994\n                                                                                                                       // 995\n  Pages.prototype.getPage = function(page) {                                                                           // 996\n    var c, n, total;                                                                                                   // 997\n    if (Meteor.isClient) {                                                                                             // 998\n      if (page == null) {                                                                                              // 999\n        page = this.currentPage();                                                                                     // 1000\n      }                                                                                                                // 1001\n      page = parseInt(page);                                                                                           // 1002\n      if (page === NaN) {                                                                                              // 1003\n        return;                                                                                                        // 1004\n      }                                                                                                                // 1005\n      total = this.sess(\"totalPages\");                                                                                 // 1006\n      if (total === 0) {                                                                                               // 1007\n        return this.ready(true);                                                                                       // 1008\n      }                                                                                                                // 1009\n      if (page <= total) {                                                                                             // 1010\n        this.requestPage(page);                                                                                        // 1011\n        this.queueNeighbors(page);                                                                                     // 1012\n        this.checkQueue();                                                                                             // 1013\n      }                                                                                                                // 1014\n      if (this.infinite) {                                                                                             // 1015\n        n = this.PaginatedCollection.find({}, {                                                                        // 1016\n          fields: this.fields,                                                                                         // 1017\n          sort: this.sort                                                                                              // 1018\n        }).count();                                                                                                    // 1019\n        c = this.PaginatedCollection.find({}, {                                                                        // 1020\n          fields: this.fields,                                                                                         // 1021\n          sort: this.sort,                                                                                             // 1022\n          skip: this.infiniteItemsLimit !== Infinity && n > this.infiniteItemsLimit ? n - this.infiniteItemsLimit : 0,\n          limit: this.infiniteItemsLimit                                                                               // 1024\n        });                                                                                                            // 1025\n      } else {                                                                                                         // 1026\n        c = this.PaginatedCollection.find(_.object([[\"_\" + this.id + \"_p\", page]]), {                                  // 1027\n          fields: this.fields,                                                                                         // 1028\n          sort: _.object([[\"_\" + this.id + \"_i\", 1]])                                                                  // 1029\n        });                                                                                                            // 1030\n        c.observeChanges({                                                                                             // 1031\n          added: (function(_this) {                                                                                    // 1032\n            return function() {                                                                                        // 1033\n              return _this.countPages();                                                                               // 1034\n            };                                                                                                         // 1035\n          })(this),                                                                                                    // 1036\n          removed: (function(_this) {                                                                                  // 1037\n            return function() {                                                                                        // 1038\n              return _this.countPages();                                                                               // 1039\n            };                                                                                                         // 1040\n          })(this)                                                                                                     // 1041\n        });                                                                                                            // 1042\n      }                                                                                                                // 1043\n      return c.fetch();                                                                                                // 1044\n    }                                                                                                                  // 1045\n  };                                                                                                                   // 1046\n                                                                                                                       // 1047\n  Pages.prototype.requestPage = function(page) {                                                                       // 1048\n    if (!page || this.requested[page] || this.received[page]) {                                                        // 1049\n      return;                                                                                                          // 1050\n    }                                                                                                                  // 1051\n    this.logRequest(page);                                                                                             // 1052\n    return Meteor.defer((function(page) {                                                                              // 1053\n      return this.subscriptions[page] = Meteor.subscribe(this.id, page, {                                              // 1054\n        onReady: (function(page) {                                                                                     // 1055\n          return this.onPage(page);                                                                                    // 1056\n        }).bind(this, page),                                                                                           // 1057\n        onError: (function(_this) {                                                                                    // 1058\n          return function(e) {                                                                                         // 1059\n            return _this.error(e.message);                                                                             // 1060\n          };                                                                                                           // 1061\n        })(this)                                                                                                       // 1062\n      });                                                                                                              // 1063\n    }).bind(this, page));                                                                                              // 1064\n  };                                                                                                                   // 1065\n                                                                                                                       // 1066\n  Pages.prototype.onPage = function(page) {                                                                            // 1067\n    this.logResponse(page);                                                                                            // 1068\n    this.ready(page);                                                                                                  // 1069\n    if (this.infinite) {                                                                                               // 1070\n      this.lastPage = page;                                                                                            // 1071\n    }                                                                                                                  // 1072\n    this.countPages();                                                                                                 // 1073\n    return this.checkQueue();                                                                                          // 1074\n  };                                                                                                                   // 1075\n                                                                                                                       // 1076\n  return Pages;                                                                                                        // 1077\n                                                                                                                       // 1078\n})();                                                                                                                  // 1079\n                                                                                                                       // 1080\nMeteor.Pagination = Pages;                                                                                             // 1081\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       // 1083\n}).call(this);                                                                                                         // 1084\n                                                                                                                       // 1085\n                                                                                                                       // 1086\n                                                                                                                       // 1087\n                                                                                                                       // 1088\n                                                                                                                       // 1089\n                                                                                                                       // 1090\n(function () {                                                                                                         // 1091\n                                                                                                                       // 1092\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/alethes:pages/client/template.templates.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"pages\");                                                                                         // 2\nTemplate[\"pages\"] = new Template(\"Template.pages\", (function() {                                                       // 3\n  var view = this;                                                                                                     // 4\n  return \"\";                                                                                                           // 5\n}));                                                                                                                   // 6\n                                                                                                                       // 7\nTemplate.__checkName(\"pagesNav\");                                                                                      // 8\nTemplate[\"pagesNav\"] = new Template(\"Template.pagesNav\", (function() {                                                 // 9\n  var view = this;                                                                                                     // 10\n  return \"\";                                                                                                           // 11\n}));                                                                                                                   // 12\n                                                                                                                       // 13\nTemplate.__checkName(\"_pagesLoading\");                                                                                 // 14\nTemplate[\"_pagesLoading\"] = new Template(\"Template._pagesLoading\", (function() {                                       // 15\n  var view = this;                                                                                                     // 16\n  return HTML.Raw('<div class=\"pagesLoadingDefaultCont\">\\n    <div class=\"pagesLoadingDefault\"><img src=\"/packages/alethes_pages/public/loader.gif\"></div>\\n  </div>');\n}));                                                                                                                   // 18\n                                                                                                                       // 19\nTemplate.__checkName(\"_pagesPageCont\");                                                                                // 20\nTemplate[\"_pagesPageCont\"] = new Template(\"Template._pagesPageCont\", (function() {                                     // 21\n  var view = this;                                                                                                     // 22\n  return Blaze.If(function() {                                                                                         // 23\n    return Spacebars.dataMustache(view.lookup(\"divWrapper\"), view.lookup(\"pagesData\"));                                // 24\n  }, function() {                                                                                                      // 25\n    return [ \"\\n    \", HTML.DIV({                                                                                      // 26\n      \"class\": function() {                                                                                            // 27\n        return Spacebars.mustache(view.lookup(\"divWrapper\"), view.lookup(\"pagesData\"));                                // 28\n      }                                                                                                                // 29\n    }, \"\\n      \", Blaze._TemplateWith(function() {                                                                    // 30\n      return Spacebars.call(view.lookup(\"pagesData\"));                                                                 // 31\n    }, function() {                                                                                                    // 32\n      return Spacebars.include(view.lookupTemplate(\"_pagesPage\"));                                                     // 33\n    }), \"\\n    \"), \"\\n  \" ];                                                                                           // 34\n  }, function() {                                                                                                      // 35\n    return [ Blaze.If(function() {                                                                                     // 36\n      return Spacebars.dataMustache(view.lookup(\"table\"), view.lookup(\"pagesData\"));                                   // 37\n    }, function() {                                                                                                    // 38\n      return [ \"\\n    \", Blaze.If(function() {                                                                         // 39\n        return Spacebars.dataMustache(view.lookup(\"tableWrapper\"), view.lookup(\"pagesData\"));                          // 40\n      }, function() {                                                                                                  // 41\n        return [ \"\\n      \", HTML.DIV({                                                                                // 42\n          \"class\": function() {                                                                                        // 43\n            return Spacebars.mustache(view.lookup(\"tableWrapper\"), view.lookup(\"pagesData\"));                          // 44\n          }                                                                                                            // 45\n        }, \"\\n        \", Blaze._TemplateWith(function() {                                                              // 46\n          return Spacebars.call(view.lookup(\"pagesData\"));                                                             // 47\n        }, function() {                                                                                                // 48\n          return Spacebars.include(view.lookupTemplate(\"_pagesTable\"));                                                // 49\n        }), \"\\n      \"), \"\\n    \" ];                                                                                   // 50\n      }, function() {                                                                                                  // 51\n        return [ \"\\n        \", Blaze._TemplateWith(function() {                                                        // 52\n          return Spacebars.call(view.lookup(\"pagesData\"));                                                             // 53\n        }, function() {                                                                                                // 54\n          return Spacebars.include(view.lookupTemplate(\"_pagesTable\"));                                                // 55\n        }), \"\\n    \" ];                                                                                                // 56\n      }), \"\\n  \" ];                                                                                                    // 57\n    }, function() {                                                                                                    // 58\n      return [ \"\\n  \", Blaze._TemplateWith(function() {                                                                // 59\n        return Spacebars.call(view.lookup(\"pagesData\"));                                                               // 60\n      }, function() {                                                                                                  // 61\n        return Spacebars.include(view.lookupTemplate(\"_pagesPage\"));                                                   // 62\n      }), \"\\n  \" ];                                                                                                    // 63\n    }), \"\\n  \" ];                                                                                                      // 64\n  });                                                                                                                  // 65\n}));                                                                                                                   // 66\n                                                                                                                       // 67\nTemplate.__checkName(\"_pagesTable\");                                                                                   // 68\nTemplate[\"_pagesTable\"] = new Template(\"Template._pagesTable\", (function() {                                           // 69\n  var view = this;                                                                                                     // 70\n  return HTML.TABLE({                                                                                                  // 71\n    \"class\": function() {                                                                                              // 72\n      return Spacebars.mustache(view.lookup(\"class\"));                                                                 // 73\n    }                                                                                                                  // 74\n  }, \"\\n    \", HTML.THEAD(\"\\n      \", HTML.TR(\"\\n        \", Blaze.Each(function() {                                    // 75\n    return Spacebars.call(view.lookup(\"header\"));                                                                      // 76\n  }, function() {                                                                                                      // 77\n    return [ \"\\n          \", HTML.TH(Blaze.View(function() {                                                           // 78\n      return Spacebars.mustache(view.lookup(\"value\"));                                                                 // 79\n    })), \"\\n        \" ];                                                                                               // 80\n  }), \"\\n      \"), \"\\n    \"), \"\\n    \", HTML.TBODY(\"\\n      \", Spacebars.include(view.lookupTemplate(\"_pagesPage\")), \"\\n    \"), \"\\n  \");\n}));                                                                                                                   // 82\n                                                                                                                       // 83\nTemplate.__checkName(\"_pagesTableItem\");                                                                               // 84\nTemplate[\"_pagesTableItem\"] = new Template(\"Template._pagesTableItem\", (function() {                                   // 85\n  var view = this;                                                                                                     // 86\n  return HTML.TR(\"\\n    \", Blaze.Each(function() {                                                                     // 87\n    return Spacebars.dataMustache(view.lookup(\"attrs\"), view.lookup(\"..\"));                                            // 88\n  }, function() {                                                                                                      // 89\n    return [ \"\\n      \", HTML.TD(Blaze.View(function() {                                                               // 90\n      return Spacebars.mustache(view.lookup(\"value\"));                                                                 // 91\n    })), \"\\n    \" ];                                                                                                   // 92\n  }), \"\\n  \");                                                                                                         // 93\n}));                                                                                                                   // 94\n                                                                                                                       // 95\nTemplate.__checkName(\"_pagesPage\");                                                                                    // 96\nTemplate[\"_pagesPage\"] = new Template(\"Template._pagesPage\", (function() {                                             // 97\n  var view = this;                                                                                                     // 98\n  return [ Blaze.If(function() {                                                                                       // 99\n    return Spacebars.dataMustache(view.lookup(\"ready\"), view.lookup(\"pagesData\"));                                     // 100\n  }, function() {                                                                                                      // 101\n    return \"\\n  \";                                                                                                     // 102\n  }, function() {                                                                                                      // 103\n    return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"_pagesLoading\")), \"\\n  \" ];                              // 104\n  }), \"\\n  \", Blaze.Each(function() {                                                                                  // 105\n    return Spacebars.call(view.lookup(\"items\"));                                                                       // 106\n  }, function() {                                                                                                      // 107\n    return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"item\")), \"\\n  \" ];                                       // 108\n  }) ];                                                                                                                // 109\n}));                                                                                                                   // 110\n                                                                                                                       // 111\nTemplate.__checkName(\"_pagesNavCont\");                                                                                 // 112\nTemplate[\"_pagesNavCont\"] = new Template(\"Template._pagesNavCont\", (function() {                                       // 113\n  var view = this;                                                                                                     // 114\n  return Blaze._TemplateWith(function() {                                                                              // 115\n    return Spacebars.call(view.lookup(\"pagesData\"));                                                                   // 116\n  }, function() {                                                                                                      // 117\n    return Spacebars.include(view.lookupTemplate(\"_pagesNav\"));                                                        // 118\n  });                                                                                                                  // 119\n}));                                                                                                                   // 120\n                                                                                                                       // 121\nTemplate.__checkName(\"_pagesNav\");                                                                                     // 122\nTemplate[\"_pagesNav\"] = new Template(\"Template._pagesNav\", (function() {                                               // 123\n  var view = this;                                                                                                     // 124\n  return Blaze.If(function() {                                                                                         // 125\n    return Spacebars.call(view.lookup(\"show\"));                                                                        // 126\n  }, function() {                                                                                                      // 127\n    return [ \"\\n    \", HTML.DIV({                                                                                      // 128\n      style: \"text-align:center\",                                                                                      // 129\n      \"data-pages\": function() {                                                                                       // 130\n        return Spacebars.mustache(view.lookup(\"name\"));                                                                // 131\n      },                                                                                                               // 132\n      \"class\": \"pagination-cont\"                                                                                       // 133\n    }, \"\\n      \", HTML.UL({                                                                                           // 134\n      \"class\": \"pagination\"                                                                                            // 135\n    }, \"\\n      \", Blaze.Each(function() {                                                                             // 136\n      return Spacebars.call(view.lookup(\"paginationNeighbors\"));                                                       // 137\n    }, function() {                                                                                                    // 138\n      return [ \"\\n        \", HTML.LI({                                                                                 // 139\n        \"class\": function() {                                                                                          // 140\n          return [ Spacebars.mustache(view.lookup(\"active\")), \" \", Spacebars.mustache(view.lookup(\"disabled\")) ];      // 141\n        }                                                                                                              // 142\n      }, \"\\n          \", HTML.A({                                                                                      // 143\n        href: function() {                                                                                             // 144\n          return Spacebars.mustache(view.lookup(\"link\"));                                                              // 145\n        }                                                                                                              // 146\n      }, Blaze.View(function() {                                                                                       // 147\n        return Spacebars.mustache(view.lookup(\"p\"));                                                                   // 148\n      })), \"\\n        \"), \"\\n      \" ];                                                                                // 149\n    }), \"\\n      \"), \"\\n    \"), \"\\n  \" ];                                                                              // 150\n  });                                                                                                                  // 151\n}));                                                                                                                   // 152\n                                                                                                                       // 153\nTemplate.__checkName(\"_pagesItemDefault\");                                                                             // 154\nTemplate[\"_pagesItemDefault\"] = new Template(\"Template._pagesItemDefault\", (function() {                               // 155\n  var view = this;                                                                                                     // 156\n  return HTML.DIV({                                                                                                    // 157\n    \"class\": \"pagesItemDefault\"                                                                                        // 158\n  }, Blaze.Each(function() {                                                                                           // 159\n    return Spacebars.call(view.lookup(\"properties\"));                                                                  // 160\n  }, function() {                                                                                                      // 161\n    return [ \"\\n    \", HTML.DIV(HTML.I(Blaze.View(function() {                                                         // 162\n      return Spacebars.mustache(view.lookup(\"name\"));                                                                  // 163\n    })), \": \", Blaze.View(function() {                                                                                 // 164\n      return Spacebars.mustache(view.lookup(\"value\"));                                                                 // 165\n    })) ];                                                                                                             // 166\n  }), \"\\n  \");                                                                                                         // 167\n}));                                                                                                                   // 168\n                                                                                                                       // 169\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       // 1269\n}).call(this);                                                                                                         // 1270\n                                                                                                                       // 1271\n                                                                                                                       // 1272\n                                                                                                                       // 1273\n                                                                                                                       // 1274\n                                                                                                                       // 1275\n                                                                                                                       // 1276\n(function () {                                                                                                         // 1277\n                                                                                                                       // 1278\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/alethes:pages/client/controllers.coffee.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar global, te, th;                                                                                                    // 1286\n                                                                                                                       // 1287\nglobal = this;                                                                                                         // 1288\n                                                                                                                       // 1289\nth = Template.prototype.helpers;                                                                                       // 1290\n                                                                                                                       // 1291\nthis._TemplateHelpers = {};                                                                                            // 1292\n                                                                                                                       // 1293\nTemplate.prototype.helpers = function(dict) {                                                                          // 1294\n  global._TemplateHelpers[this.viewName.substr(9)] = dict;                                                             // 1295\n  return th.apply(this, arguments);                                                                                    // 1296\n};                                                                                                                     // 1297\n                                                                                                                       // 1298\nte = Template.prototype.events;                                                                                        // 1299\n                                                                                                                       // 1300\nthis._TemplateEvents = {};                                                                                             // 1301\n                                                                                                                       // 1302\nTemplate.prototype.events = function(dict) {                                                                           // 1303\n  global._TemplateEvents[this.viewName.substr(9)] = dict;                                                              // 1304\n  return te.apply(this, arguments);                                                                                    // 1305\n};                                                                                                                     // 1306\n                                                                                                                       // 1307\nTemplate._pagesPageCont.helpers({                                                                                      // 1308\n  divWrapper: function(self) {                                                                                         // 1309\n    return !self.table && self.divWrapper;                                                                             // 1310\n  },                                                                                                                   // 1311\n  table: function(self) {                                                                                              // 1312\n    return self.table;                                                                                                 // 1313\n  },                                                                                                                   // 1314\n  tableWrapper: function(self) {                                                                                       // 1315\n    return self.table.wrapper;                                                                                         // 1316\n  }                                                                                                                    // 1317\n});                                                                                                                    // 1318\n                                                                                                                       // 1319\nTemplate._pagesTable.helpers({                                                                                         // 1320\n  \"class\": function() {                                                                                                // 1321\n    return this.table[\"class\"] || \"\";                                                                                  // 1322\n  },                                                                                                                   // 1323\n  fields: function() {                                                                                                 // 1324\n    return _.map(this.table.fields, function(v) {                                                                      // 1325\n      return {                                                                                                         // 1326\n        value: v                                                                                                       // 1327\n      };                                                                                                               // 1328\n    });                                                                                                                // 1329\n  },                                                                                                                   // 1330\n  header: function() {                                                                                                 // 1331\n    return _.map(this.table.header || this.table.fields, function(v) {                                                 // 1332\n      return {                                                                                                         // 1333\n        value: v                                                                                                       // 1334\n      };                                                                                                               // 1335\n    });                                                                                                                // 1336\n  }                                                                                                                    // 1337\n});                                                                                                                    // 1338\n                                                                                                                       // 1339\nTemplate._pagesPage.helpers({                                                                                          // 1340\n  ready: function() {                                                                                                  // 1341\n    return this.sess(\"ready\");                                                                                         // 1342\n  },                                                                                                                   // 1343\n  items: function() {                                                                                                  // 1344\n    var cp, i, k, n, op, p, _i, _len;                                                                                  // 1345\n    if (this.infinite) {                                                                                               // 1346\n      setTimeout((function(_this) {                                                                                    // 1347\n        return function() {                                                                                            // 1348\n          return _this.blockScrolling = false;                                                                         // 1349\n        };                                                                                                             // 1350\n      })(this), 100);                                                                                                  // 1351\n    }                                                                                                                  // 1352\n    if (this.init) {                                                                                                   // 1353\n      this.checkInitPage();                                                                                            // 1354\n    }                                                                                                                  // 1355\n    cp = this.sess(\"currentPage\");                                                                                     // 1356\n    op = this.sess(\"oldPage\");                                                                                         // 1357\n    this.sess(\"ready\");                                                                                                // 1358\n    if (0 === this.sess(\"totalPages\")) {                                                                               // 1359\n      this.ready(true);                                                                                                // 1360\n      return [];                                                                                                       // 1361\n    }                                                                                                                  // 1362\n    if (this.received[cp] || (this.fastRender && cp === this.initPage)) {                                              // 1363\n      this.ready(true);                                                                                                // 1364\n      n = cp;                                                                                                          // 1365\n    } else {                                                                                                           // 1366\n      this.sess(\"ready\", false);                                                                                       // 1367\n      this.getPage(cp);                                                                                                // 1368\n      n = op;                                                                                                          // 1369\n    }                                                                                                                  // 1370\n    if (n == null) {                                                                                                   // 1371\n      return [];                                                                                                       // 1372\n    }                                                                                                                  // 1373\n    p = this.getPage(n);                                                                                               // 1374\n    if (p == null) {                                                                                                   // 1375\n      return [];                                                                                                       // 1376\n    }                                                                                                                  // 1377\n    for (k = _i = 0, _len = p.length; _i < _len; k = ++_i) {                                                           // 1378\n      i = p[k];                                                                                                        // 1379\n      p[k]['_t'] = this.itemTemplate;                                                                                  // 1380\n    }                                                                                                                  // 1381\n    return p;                                                                                                          // 1382\n  },                                                                                                                   // 1383\n  item: function() {                                                                                                   // 1384\n    return Template[this._t];                                                                                          // 1385\n  }                                                                                                                    // 1386\n});                                                                                                                    // 1387\n                                                                                                                       // 1388\nTemplate._pagesNav.helpers({                                                                                           // 1389\n  show: function() {                                                                                                   // 1390\n    return this.fastRender || (!this.infinite && 1 < this.sess(\"totalPages\"));                                         // 1391\n  },                                                                                                                   // 1392\n  link: function() {                                                                                                   // 1393\n    var p, self, total;                                                                                                // 1394\n    self = this._p;                                                                                                    // 1395\n    if (self.router) {                                                                                                 // 1396\n      p = this.n;                                                                                                      // 1397\n      if (p < 1) {                                                                                                     // 1398\n        p = 1;                                                                                                         // 1399\n      }                                                                                                                // 1400\n      total = self.sess(\"totalPages\");                                                                                 // 1401\n      if (p > total) {                                                                                                 // 1402\n        p = total;                                                                                                     // 1403\n      }                                                                                                                // 1404\n      return self.linkTo(p);                                                                                           // 1405\n    }                                                                                                                  // 1406\n    return \"#\";                                                                                                        // 1407\n  },                                                                                                                   // 1408\n  paginationNeighbors: function() {                                                                                    // 1409\n    return this.paginationNeighbors();                                                                                 // 1410\n  }                                                                                                                    // 1411\n});                                                                                                                    // 1412\n                                                                                                                       // 1413\nTemplate._pagesNav.events({                                                                                            // 1414\n  \"click a\": function(e) {                                                                                             // 1415\n    return (_.throttle(function(e, n) {                                                                                // 1416\n      var self;                                                                                                        // 1417\n      self = Meteor.Pagination.prototype.instances[e.target.parentNode.parentNode.parentNode.getAttribute('data-pages')];\n      if (self.router !== \"iron-router\") {                                                                             // 1419\n        e.preventDefault();                                                                                            // 1420\n        return self.onNavClick.call(self, n);                                                                          // 1421\n      }                                                                                                                // 1422\n    }, self.rateLimit * 1000))(e, this.n);                                                                             // 1423\n  }                                                                                                                    // 1424\n});                                                                                                                    // 1425\n                                                                                                                       // 1426\nTemplate._pagesTableItem.helpers({                                                                                     // 1427\n  attrs: function(self) {                                                                                              // 1428\n    return _.map(self.table.fields, (function(n) {                                                                     // 1429\n      return {                                                                                                         // 1430\n        value: this[n] != null ? this[n] : \"\"                                                                          // 1431\n      };                                                                                                               // 1432\n    }).bind(this));                                                                                                    // 1433\n  }                                                                                                                    // 1434\n});                                                                                                                    // 1435\n                                                                                                                       // 1436\nTemplate._pagesItemDefault.helpers({                                                                                   // 1437\n  properties: function() {                                                                                             // 1438\n    return _.compact(_.map(this, function(v, k) {                                                                      // 1439\n      if (k[0] !== \"_\") {                                                                                              // 1440\n        return {                                                                                                       // 1441\n          name: k,                                                                                                     // 1442\n          value: v                                                                                                     // 1443\n        };                                                                                                             // 1444\n      } else {                                                                                                         // 1445\n        return null;                                                                                                   // 1446\n      }                                                                                                                // 1447\n    }));                                                                                                               // 1448\n  }                                                                                                                    // 1449\n});                                                                                                                    // 1450\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       // 1452\n}).call(this);                                                                                                         // 1453\n                                                                                                                       // 1454\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['alethes:pages'] = {};\n\n})();\n","servePath":"/packages/alethes_pages.js","sourceMap":{"version":3,"sources":["/packages/alethes_pages/packages/alethes_pages.js"],"names":[],"mappingsfile":"/packages/alethes_pages.js","sourcesContent":["(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/alethes:pages/lib/pages.coffee.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar Pages,\n  __slice = [].slice,\n  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\nthis.__Pages = Pages = (function() {\n  Pages.prototype.settings = {\n    dataMargin: [true, Number, 3],\n    divWrapper: [true, Match.OneOf(Match.Optional(String), Match.Optional(Boolean)), \"pagesCont\"],\n    fields: [true, Object, {}],\n    filters: [true, Object, {}],\n    itemTemplate: [true, String, \"_pagesItemDefault\"],\n    navShowEdges: [true, Boolean, false],\n    navShowFirst: [true, Boolean, true],\n    navShowLast: [true, Boolean, true],\n    resetOnReload: [true, Boolean, false],\n    paginationMargin: [true, Number, 3],\n    perPage: [true, Number, 10],\n    route: [true, String, \"/page/\"],\n    router: [true, Match.Optional(String), void 0],\n    routerTemplate: [true, String, \"pages\"],\n    routerLayout: [true, Match.Optional(String), void 0],\n    sort: [true, Object, {}],\n    auth: [false, Match.Optional(Function), void 0],\n    availableSettings: [false, Object, {}],\n    fastRender: [false, Boolean, false],\n    homeRoute: [false, Match.OneOf(String, Array, Boolean), \"/\"],\n    infinite: [false, Boolean, false],\n    infiniteItemsLimit: [false, Number, Infinity],\n    infiniteTrigger: [false, Number, .9],\n    infiniteRateLimit: [false, Number, 1],\n    navTemplate: [false, String, \"_pagesNavCont\"],\n    onDeniedSetting: [\n      false, Function, function(k, v, e) {\n        return typeof console !== \"undefined\" && console !== null ? console.log(\"Changing \" + k + \" not allowed.\") : void 0;\n      }\n    ],\n    pageSizeLimit: [false, Number, 60],\n    pageTemplate: [false, String, \"_pagesPageCont\"],\n    rateLimit: [false, Number, 1],\n    routeSettings: [false, Match.Optional(Function), void 0],\n    table: [false, Match.OneOf(Boolean, Object), false],\n    tableItemTemplate: [false, String, \"_pagesTableItem\"],\n    tableTemplate: [false, String, \"_pagesTable\"],\n    templateName: [false, Match.Optional(String), void 0]\n  };\n\n  Pages.prototype._nInstances = 0;\n\n  Pages.prototype.collections = {};\n\n  Pages.prototype.instances = {};\n\n  Pages.prototype.methods = {\n    \"CountPages\": function(sub) {\n      var n;\n      n = sub.get(\"nPublishedPages\");\n      if (n != null) {\n        return n;\n      }\n      n = Math.ceil(this.Collection.find({\n        $and: [sub.get(\"filters\"), sub.get(\"realFilters\") || {}]\n      }).count() / (sub.get(\"perPage\")));\n      return n || 1;\n    },\n    \"Set\": function(k, v, sub) {\n      var changes, _k, _v;\n      if (this.settings[k] == null) {\n        this.error(4003, \"Invalid option: \" + k + \".\");\n      }\n      check(k, String);\n      check(v, this.settings[k][1]);\n      check(sub, Match.Where(function(sub) {\n        var _ref;\n        return ((_ref = sub.connection) != null ? _ref.id : void 0) != null;\n      }));\n      if (!this.availableSettings[k] || (_.isFunction(this.availableSettings[k]) && !this.availableSettings[k](v, sub))) {\n        this.error(4002, \"Changing \" + k + \" not allowed.\");\n      }\n      changes = 0;\n      if (v != null) {\n        changes = this._set(k, v, {\n          cid: sub.connection.id\n        });\n      } else if (!_.isString(k)) {\n        for (_k in k) {\n          _v = k[_k];\n          changes += this.set(_k, _v, {\n            cid: sub.connection.id\n          });\n        }\n      }\n      return changes;\n    },\n    \"Unsubscribe\": function() {\n      var i, k, subs, _i, _len, _ref;\n      subs = [];\n      _ref = this.subscriptions;\n      for (k = _i = 0, _len = _ref.length; _i < _len; k = ++_i) {\n        i = _ref[k];\n        if (i.connection.id === arguments[arguments.length - 1].connection.id) {\n          i.stop();\n        } else {\n          subs.push(i);\n        }\n      }\n      this.subscriptions = subs;\n      return true;\n    }\n  };\n\n  function Pages(collection, settings) {\n    if (settings == null) {\n      settings = {};\n    }\n    if (!(this instanceof Meteor.Pagination)) {\n      throw new Meteor.Error(4000, \"The Meteor.Pagination instance has to be initiated with `new`\");\n    }\n    this.init = true;\n    this.subscriptions = [];\n    this.userSettings = {};\n    this._currentPage = 1;\n    this.setCollection(collection);\n    this.setInitial(settings);\n    this.setDefaults();\n    this.setRouter();\n    this[(Meteor.isServer ? \"server\" : \"client\") + \"Init\"]();\n    this.registerInstance();\n    this;\n  }\n\n  Pages.prototype.error = function(code, msg) {\n    if (code == null) {\n      msg = code;\n    }\n    throw new Meteor.Error(code, msg);\n  };\n\n  Pages.prototype.serverInit = function() {\n    var self;\n    this.setMethods();\n    self = this;\n    Meteor.onConnection((function(_this) {\n      return function(connection) {\n        return connection.onClose(function() {\n          return delete _this.userSettings[connection.id];\n        });\n      };\n    })(this));\n    return Meteor.publish(this.id, function(page) {\n      return self.publish.call(self, page, this);\n    });\n  };\n\n  Pages.prototype.clientInit = function() {\n    this.requested = {};\n    this.received = {};\n    this.queue = [];\n    this.setTemplates();\n    this.countPages();\n    Tracker.autorun((function(_this) {\n      return function() {\n        if (typeof Meteor.userId === \"function\") {\n          Meteor.userId();\n        }\n        return _this.reload();\n      };\n    })(this));\n    if (this.infinite) {\n      return this.setInfiniteTrigger();\n    }\n  };\n\n  Pages.prototype.reload = function() {\n    return this.unsubscribe((function(_this) {\n      return function() {\n        return _this.call(\"CountPages\", function(e, total) {\n          var p;\n          _this.sess(\"totalPages\", total);\n          p = _this.currentPage();\n          if ((p == null) || _this.resetOnReload || p > total) {\n            p = 1;\n          }\n          _this.sess(\"currentPage\", false);\n          return _this.sess(\"currentPage\", p);\n        });\n      };\n    })(this));\n  };\n\n  Pages.prototype.unsubscribe = function(cb) {\n    return this.call(\"Unsubscribe\", (function(_this) {\n      return function() {\n        delete _this.initPage;\n        _this.subscriptions = [];\n        _this.requested = {};\n        _this.received = {};\n        _this.queue = [];\n        return typeof cb === \"function\" ? cb() : void 0;\n      };\n    })(this));\n  };\n\n  Pages.prototype.setDefaults = function() {\n    var k, v, _ref, _results;\n    _ref = this.settings;\n    _results = [];\n    for (k in _ref) {\n      v = _ref[k];\n      if (v[2] != null) {\n        _results.push(this[k] != null ? this[k] : this[k] = v[2]);\n      } else {\n        _results.push(void 0);\n      }\n    }\n    return _results;\n  };\n\n  Pages.prototype.syncSettings = function(cb) {\n    var S, k, v, _ref;\n    S = {};\n    _ref = this.settings;\n    for (k in _ref) {\n      v = _ref[k];\n      if (v[0]) {\n        S[k] = this[k];\n      }\n    }\n    return this.set(S, cb != null ? {\n      cb: cb.bind(this)\n    } : null);\n  };\n\n  Pages.prototype.setMethods = function() {\n    var f, n, nm, self, _ref;\n    nm = {};\n    self = this;\n    _ref = this.methods;\n    for (n in _ref) {\n      f = _ref[n];\n      nm[this.getMethodName(n)] = (function(f) {\n        return function() {\n          var arg, k, r, v;\n          arg = (function() {\n            var _results;\n            _results = [];\n            for (k in arguments) {\n              v = arguments[k];\n              _results.push(v);\n            }\n            return _results;\n          }).apply(this, arguments);\n          arg.push(this);\n          this.get = (function(self, k) {\n            return self.get(k, this.connection.id);\n          }).bind(this, self);\n          r = f.apply(self, arg);\n          return r;\n        };\n      })(f);\n    }\n    return Meteor.methods(nm);\n  };\n\n  Pages.prototype.getMethodName = function(name) {\n    return \"\" + this.id + \"/\" + name;\n  };\n\n  Pages.prototype.call = function() {\n    var args, last;\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    check(args, Array);\n    if (args.length < 1) {\n      this.error(4001, \"Method name not provided in a method call.\");\n    }\n    args[0] = this.getMethodName(args[0]);\n    last = args.length - 1;\n    if (_.isFunction(args[last])) {\n      args[last] = args[last].bind(this);\n    }\n    return Meteor.call.apply(this, args);\n  };\n\n  Pages.prototype.sess = function(k, v) {\n    if (typeof Session === \"undefined\" || Session === null) {\n      return;\n    }\n    k = \"\" + this.id + \".\" + k;\n    if (arguments.length === 2) {\n      return Session.set(k, v);\n    } else {\n      return Session.get(k);\n    }\n  };\n\n  Pages.prototype.get = function(setting, connectionId) {\n    var _ref, _ref1;\n    return (_ref = (_ref1 = this.userSettings[connectionId]) != null ? _ref1[setting] : void 0) != null ? _ref : this[setting];\n  };\n\n  Pages.prototype.set = function() {\n    var ch, k, opts, _k, _v;\n    k = arguments[0], opts = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    ch = 0;\n    switch (opts.length) {\n      case 0:\n        if (_.isObject(k)) {\n          for (_k in k) {\n            _v = k[_k];\n            ch += this._set(_k, _v);\n          }\n        }\n        break;\n      case 1:\n        if (_.isObject(k)) {\n          if (_.isFunction(opts[0])) {\n            opts[0] = {\n              cb: opts[0]\n            };\n          }\n          for (_k in k) {\n            _v = k[_k];\n            ch += this._set(_k, _v, opts[0]);\n          }\n        } else {\n          check(k, String);\n          ch = this._set(k, opts[0]);\n        }\n        break;\n      case 2:\n        if (_.isFunction(opts[1])) {\n          opts[1] = {\n            cb: opts[1]\n          };\n        }\n        ch = this._set(k, opts[0], opts[1]);\n        break;\n      case 3:\n        check(opts[1], Object);\n        check(opts[2], Function);\n        opts[2] = {\n          cb: opts[2]\n        };\n        ch = this._set(k, opts[1], opts[2]);\n    }\n    if (Meteor.isClient && ch) {\n      this.reload();\n    }\n    return ch;\n  };\n\n  Pages.prototype.setInitial = function(settings) {\n    this.setInitDone = false;\n    this.set(settings);\n    return this.setInitDone = true;\n  };\n\n  Pages.prototype.sanitizeRegex = function(v) {\n    var lis;\n    if (_.isRegExp(v)) {\n      v = v.toString();\n      lis = v.lastIndexOf(\"/\");\n      v = {\n        $regex: v.slice(1, lis),\n        $options: v.slice(1 + lis)\n      };\n    }\n    return v;\n  };\n\n  Pages.prototype.sanitizeRegexObj = function(obj) {\n    var k, v;\n    if (_.isRegExp(obj)) {\n      return this.sanitizeRegex(obj);\n    }\n    for (k in obj) {\n      v = obj[k];\n      if (_.isRegExp(v)) {\n        obj[k] = this.sanitizeRegex(v);\n      } else if (\"object\" === typeof v) {\n        obj[k] = this.sanitizeRegexObj(v);\n      }\n    }\n    return obj;\n  };\n\n  Pages.prototype._set = function(k, v, opts) {\n    var ch, oldV, _base, _name, _ref, _ref1, _ref2;\n    if (opts == null) {\n      opts = {};\n    }\n    check(k, String);\n    ch = 1;\n    if (Meteor.isServer || (this[k] == null) || ((_ref = this.settings[k]) != null ? _ref[0] : void 0) || opts.init) {\n      if ((((_ref1 = this.settings[k]) != null ? _ref1[1] : void 0) != null) && ((_ref2 = this.settings[k]) != null ? _ref2[1] : void 0) !== true) {\n        check(v, this.settings[k][1]);\n      }\n      this.sanitizeRegexObj(v);\n      oldV = this.get(k, opts != null ? opts.cid : void 0);\n      if (this.valuesEqual(v, oldV)) {\n        return 0;\n      }\n      if (Meteor.isClient) {\n        this[k] = v;\n        if (this.setInitDone) {\n          this.call(\"Set\", k, v, function(e, r) {\n            if (e) {\n              this[k] = oldV;\n              return this.onDeniedSetting.call(this, k, v, e);\n            }\n            return typeof opts.cb === \"function\" ? opts.cb(ch) : void 0;\n          });\n        }\n      } else {\n        if (opts.cid) {\n          if (ch != null) {\n            if ((_base = this.userSettings)[_name = opts.cid] == null) {\n              _base[_name] = {};\n            }\n            this.userSettings[opts.cid][k] = v;\n          }\n        } else {\n          this[k] = v;\n        }\n        if (typeof opts.cb === \"function\") {\n          opts.cb(ch);\n        }\n      }\n    } else {\n      this.onDeniedSetting.call(this, k, v);\n    }\n    return ch;\n  };\n\n  Pages.prototype.valuesEqual = function(v1, v2) {\n    if (_.isFunction(v1)) {\n      return _.isFunction(v2) && v1.toString() === v2.toString();\n    } else {\n      return _.isEqual(v1, v2);\n    }\n  };\n\n  Pages.prototype.setId = function(name) {\n    var n;\n    if (this.templateName) {\n      name = this.templateName;\n    }\n    while (name in Pages.prototype.instances) {\n      n = name.match(/[0-9]+$/);\n      if (n != null) {\n        name = name.slice(0, name.length - n[0].length) + (parseInt(n) + 1);\n      } else {\n        name = name + \"2\";\n      }\n    }\n    this.id = \"pages_\" + name;\n    return this.name = name;\n  };\n\n  Pages.prototype.registerInstance = function() {\n    Pages.prototype._nInstances++;\n    return Pages.prototype.instances[this.name] = this;\n  };\n\n  Pages.prototype.setCollection = function(collection) {\n    var e;\n    if (typeof collection === \"object\") {\n      Pages.prototype.collections[collection._name] = collection;\n      this.Collection = collection;\n    } else {\n      try {\n        this.Collection = new Mongo.Collection(collection);\n        Pages.prototype.collections[collection] = this.Collection;\n      } catch (_error) {\n        e = _error;\n        this.Collection = Pages.prototype.collections[collection];\n        this.Collection instanceof Mongo.Collection || this.error(4000, \"The '\" + collection + \"' collection was created outside of <Meteor.Pagination>. Pass the collection object instead of the collection's name to the <Meteor.Pagination> constructor.\");\n      }\n    }\n    this.setId(this.Collection._name);\n    return this.PaginatedCollection = new Mongo.Collection(this.id);\n  };\n\n  Pages.prototype.linkTo = function(page) {\n    var params, _ref;\n    if ((_ref = Router.current()) != null ? _ref.params : void 0) {\n      params = Router.current().params;\n      params.page = page;\n      return Router.routes[\"\" + this.name + \"_page\"].path(params);\n    }\n  };\n\n  Pages.prototype.setRouter = function() {\n    var init, l, pr, self, t, _ref;\n    if (this.router === \"iron-router\") {\n      if (this.route.indexOf(\":page\") === -1) {\n        if (this.route[0] !== \"/\") {\n          this.route = \"/\" + this.route;\n        }\n        if (this.route[this.route.length - 1] !== \"/\") {\n          this.route += \"/\";\n        }\n        pr = this.route = \"\" + this.route + \":page\";\n      }\n      t = this.routerTemplate;\n      l = (_ref = this.routerLayout) != null ? _ref : void 0;\n      self = this;\n      init = true;\n      Router.map(function() {\n        var hr, k, _i, _len, _ref1, _results;\n        if (!self.infinite) {\n          this.route(\"\" + self.name + \"_page\", {\n            path: pr,\n            template: t,\n            layoutTemplate: l,\n            onBeforeAction: function() {\n              var page;\n              page = parseInt(this.params.page);\n              if (self.init) {\n                self.sess(\"oldPage\", page);\n                self.sess(\"currentPage\", page);\n              }\n              if (self.routeSettings != null) {\n                self.routeSettings(this);\n              }\n              Tracker.nonreactive((function(_this) {\n                return function() {\n                  return self.onNavClick(page);\n                };\n              })(this));\n              return this.next();\n            }\n          });\n        }\n        if (self.homeRoute) {\n          if (_.isString(self.homeRoute)) {\n            self.homeRoute = [self.homeRoute];\n          }\n          _ref1 = self.homeRoute;\n          _results = [];\n          for (k = _i = 0, _len = _ref1.length; _i < _len; k = ++_i) {\n            hr = _ref1[k];\n            _results.push(this.route(\"\" + self.name + \"_home\" + k, {\n              path: hr,\n              template: t,\n              layoutTemplate: l,\n              onBeforeAction: function() {\n                if (self.routeSettings != null) {\n                  self.routeSettings(this);\n                }\n                if (self.init) {\n                  self.sess(\"oldPage\", 1);\n                  self.sess(\"currentPage\", 1);\n                }\n                return this.next();\n              }\n            }));\n          }\n          return _results;\n        }\n      });\n      if (Meteor.isServer && this.fastRender) {\n        self = this;\n        FastRender.route(pr, function(params) {\n          return this.subscribe(self.id, parseInt(params.page));\n        });\n        return FastRender.route(this.homeRoute, function() {\n          return this.subscribe(self.id, 1);\n        });\n      }\n    }\n  };\n\n  Pages.prototype.setPerPage = function() {\n    return this.perPage = this.pageSizeLimit < this.perPage ? this.pageSizeLimit : this.perPage;\n  };\n\n  Pages.prototype.setTemplates = function() {\n    var i, name, tn, _i, _len, _ref;\n    name = this.templateName || this.name;\n    if (this.table && this.itemTemplate === \"_pagesItemDefault\") {\n      this.itemTemplate = this.tableItemTemplate;\n    }\n    _ref = [this.navTemplate, this.pageTemplate, this.itemTemplate, this.tableTemplate];\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      i = _ref[_i];\n      tn = this.id + i;\n      Template[tn] = new Blaze.Template(\"Template.\" + tn, Template[i].renderFunction);\n      Template[tn].helpers(_TemplateHelpers[i]);\n      Template[tn].events(_TemplateEvents[i]);\n      Template[tn].helpers({\n        pagesData: this\n      });\n    }\n    return Template[name].helpers({\n      pagesData: this,\n      pagesNav: Template[this.id + this.navTemplate],\n      pages: Template[this.id + this.pageTemplate]\n    });\n  };\n\n  Pages.prototype.countPages = _.throttle(function() {\n    return this.call(\"CountPages\", (function(e, r) {\n      this.sess(\"totalPages\", r);\n      if (this.sess(\"currentPage\") > r) {\n        return this.sess(\"currentPage\", 1);\n      }\n    }).bind(this));\n  }, 500);\n\n  Pages.prototype.publish = function(page, sub) {\n    var c, cid, filters, get, handle, handle2, init, n, options, r, self, set, skip, _ref, _ref1;\n    check(page, Number);\n    check(sub, Match.Where(function(s) {\n      return s.ready != null;\n    }));\n    cid = sub.connection.id;\n    get = sub.get = (function(cid, k) {\n      return this.get(k, cid);\n    }).bind(this, cid);\n    set = sub.set = (function(cid, k, v) {\n      return this.set(k, v, {\n        cid: cid\n      });\n    }).bind(this, cid);\n    if ((_ref = this.userSettings[cid]) != null) {\n      delete _ref.realFilters;\n    }\n    if ((_ref1 = this.userSettings[cid]) != null) {\n      delete _ref1.nPublishedPages;\n    }\n    this.setPerPage();\n    skip = (page - 1) * get(\"perPage\");\n    if (skip < 0) {\n      skip = 0;\n    }\n    filters = get(\"filters\");\n    options = {\n      sort: get(\"sort\"),\n      fields: get(\"fields\"),\n      skip: skip,\n      limit: get(\"perPage\")\n    };\n    if (this.auth != null) {\n      r = this.auth.call(this, skip, sub);\n      if (!r) {\n        set(\"nPublishedPages\", 0);\n        sub.ready();\n        return this.ready();\n      } else if (_.isNumber(r)) {\n        set(\"nPublishedPages\", r);\n        if (page > r) {\n          sub.ready();\n          return this.ready();\n        }\n      } else if (_.isArray(r) && r.length === 2) {\n        if (_.isFunction(r[0].fetch)) {\n          c = r;\n        } else {\n          filters = r[0];\n          options = r[1];\n        }\n      } else if (_.isFunction(r.fetch)) {\n        c = r;\n      }\n    }\n    if (!EJSON.equals({}, filters) && !EJSON.equals(get(\"filters\"), filters)) {\n      set(\"realFilters\", filters);\n    }\n    if (c == null) {\n      c = this.Collection.find(filters, options);\n    }\n    init = true;\n    self = this;\n    handle = c.observe({\n      addedAt: (function(sub, doc, at) {\n        var e, id;\n        try {\n          doc[\"_\" + this.id + \"_p\"] = page;\n          doc[\"_\" + this.id + \"_i\"] = at;\n          id = doc._id;\n          delete doc._id;\n          if (!init) {\n            sub.added(this.id, id, doc);\n            return (this.Collection.find(get(\"filters\"), {\n              sort: get(\"sort\"),\n              fields: get(\"fields\"),\n              skip: skip,\n              limit: get(\"perPage\")\n            })).forEach((function(_this) {\n              return function(o, i) {\n                if (i >= at) {\n                  return sub.changed(_this.id, o._id, _.object([[\"_\" + _this.id + \"_i\", i + 1]]));\n                }\n              };\n            })(this));\n          }\n        } catch (_error) {\n          e = _error;\n        }\n      }).bind(this, sub)\n    });\n    handle2 = c.observeChanges({\n      movedBefore: (function(sub, id, before) {\n        var at, ref;\n        at = -1;\n        ref = false;\n        (this.Collection.find(get(\"filters\"), {\n          sort: get(\"sort\"),\n          fields: get(\"fields\"),\n          skip: skip,\n          limit: get(\"perPage\")\n        })).forEach((function(_this) {\n          return function(o, i) {\n            if (ref) {\n              return sub.changed(_this.id, o._id, _.object([[\"_\" + _this.id + \"_i\", i + 1]]));\n            } else if (o._id === before) {\n              ref = true;\n              return at = i;\n            }\n          };\n        })(this));\n        return sub.changed(this.id, id, _.object([[\"_\" + this.id + \"_i\", at]]));\n      }).bind(this, sub),\n      changed: (function(sub, id, fields) {\n        var e;\n        try {\n          return sub.changed(this.id, id, fields);\n        } catch (_error) {\n          e = _error;\n        }\n      }).bind(this, sub),\n      removed: (function(sub, id) {\n        var e;\n        try {\n          return sub.removed(this.id, id);\n        } catch (_error) {\n          e = _error;\n        }\n      }).bind(this, sub)\n    });\n    n = 0;\n    c.forEach((function(doc, index, cursor) {\n      n++;\n      doc[\"_\" + this.id + \"_p\"] = page;\n      doc[\"_\" + this.id + \"_i\"] = index;\n      return sub.added(this.id, doc._id, doc);\n    }).bind(this));\n    init = false;\n    sub.onStop(function() {\n      handle.stop();\n      return handle2.stop();\n    });\n    this.ready();\n    this.subscriptions.push(sub);\n    return c;\n  };\n\n  Pages.prototype.loading = function(p) {\n    if (!this.fastRender && p === this.currentPage()) {\n      return this.sess(\"ready\", false);\n    }\n  };\n\n  Pages.prototype.now = function() {\n    return (new Date()).getTime();\n  };\n\n  Pages.prototype.log = function(msg) {\n    return console.log(\"\" + this.name + \" \" + msg);\n  };\n\n  Pages.prototype.logRequest = function(p) {\n    this.timeLastRequest = this.now();\n    this.requesting = p;\n    return this.requested[p] = 1;\n  };\n\n  Pages.prototype.logResponse = function(p) {\n    delete this.requested[p];\n    return this.received[p] = 1;\n  };\n\n  Pages.prototype.clearQueue = function() {\n    return this.queue = [];\n  };\n\n  Pages.prototype.neighbors = function(page) {\n    var d, np, pp, _i, _ref;\n    this.n = [];\n    if (this.dataMargin === 0) {\n      return this.n;\n    }\n    for (d = _i = 1, _ref = this.dataMargin; 1 <= _ref ? _i <= _ref : _i >= _ref; d = 1 <= _ref ? ++_i : --_i) {\n      np = page + d;\n      if (np <= this.sess(\"totalPages\")) {\n        this.n.push(np);\n      }\n      pp = page - d;\n      if (pp > 0) {\n        this.n.push(pp);\n      }\n    }\n    return this.n;\n  };\n\n  Pages.prototype.queueNeighbors = function(page) {\n    var p, _i, _len, _ref, _results;\n    _ref = this.neighbors(page);\n    _results = [];\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      p = _ref[_i];\n      if (!this.received[p] && !this.requested[p]) {\n        _results.push(this.queue.push(p));\n      } else {\n        _results.push(void 0);\n      }\n    }\n    return _results;\n  };\n\n  Pages.prototype.paginationNavItem = function(label, page, disabled, active) {\n    if (active == null) {\n      active = false;\n    }\n    return {\n      p: label,\n      n: page,\n      active: active ? \"active\" : \"\",\n      disabled: disabled ? \"disabled\" : \"\"\n    };\n  };\n\n  Pages.prototype.paginationNeighbors = function() {\n    var from, i, k, n, p, page, to, total, _i, _j, _len;\n    page = this.currentPage();\n    total = this.sess(\"totalPages\");\n    from = page - this.paginationMargin;\n    to = page + this.paginationMargin;\n    if (from < 1) {\n      to += 1 - from;\n      from = 1;\n    }\n    if (to > total) {\n      from -= to - total;\n      to = total;\n    }\n    if (from < 1) {\n      from = 1;\n    }\n    if (to > total) {\n      to = total;\n    }\n    n = [];\n    if (this.navShowFirst || this.navShowEdges) {\n      n.push(this.paginationNavItem(\"«\", 1, page === 1));\n    }\n    n.push(this.paginationNavItem(\"<\", page - 1, page === 1));\n    for (p = _i = from; from <= to ? _i <= to : _i >= to; p = from <= to ? ++_i : --_i) {\n      n.push(this.paginationNavItem(p, p, page > total, p === page));\n    }\n    n.push(this.paginationNavItem(\">\", page + 1, page >= total));\n    if (this.navShowLast || this.navShowEdges) {\n      n.push(this.paginationNavItem(\"»\", total, page >= total));\n    }\n    for (k = _j = 0, _len = n.length; _j < _len; k = ++_j) {\n      i = n[k];\n      n[k]['_p'] = this;\n    }\n    return n;\n  };\n\n  Pages.prototype.onNavClick = function(n) {\n    if (n <= this.sess(\"totalPages\") && n > 0) {\n      Tracker.nonreactive((function(_this) {\n        return function() {\n          var cp;\n          cp = _this.sess(\"currentPage\");\n          if (_this.received[cp]) {\n            return _this.sess(\"oldPage\", cp);\n          }\n        };\n      })(this));\n      return this.sess(\"currentPage\", n);\n    }\n  };\n\n  Pages.prototype.setInfiniteTrigger = function() {\n    return $(window).scroll((_.throttle(function() {\n      var l, oh, t;\n      t = this.infiniteTrigger;\n      oh = document.body.offsetHeight;\n      if (t > 1) {\n        l = oh - t;\n      } else if (t > 0) {\n        l = oh * t;\n      } else {\n        return;\n      }\n      if ((window.innerHeight + window.scrollY) >= l) {\n        if (this.lastPage < this.sess(\"totalPages\")) {\n          return this.sess(\"currentPage\", this.lastPage + 1);\n        }\n      }\n    }, this.infiniteRateLimit * 1000)).bind(this));\n  };\n\n  Pages.prototype.checkQueue = _.throttle(function() {\n    var cp, i, k, neighbors, v, _ref, _results, _results1;\n    cp = this.currentPage();\n    neighbors = this.neighbors(cp);\n    if (!this.received[cp]) {\n      this.clearQueue();\n      this.requestPage(cp);\n      cp = String(cp);\n      _ref = this.requested;\n      _results = [];\n      for (k in _ref) {\n        v = _ref[k];\n        if (k !== cp) {\n          if (this.subscriptions[k] != null) {\n            this.subscriptions[k].stop();\n            delete this.subscriptions[k];\n          }\n          _results.push(delete this.requested[k]);\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    } else if (this.queue.length) {\n      _results1 = [];\n      while (this.queue.length > 0) {\n        i = this.queue.shift();\n        if (__indexOf.call(neighbors, i) >= 0) {\n          this.requestPage(i);\n          break;\n        } else {\n          _results1.push(void 0);\n        }\n      }\n      return _results1;\n    }\n  }, 500);\n\n  Pages.prototype.currentPage = function() {\n    if (Meteor.isClient && (this.sess(\"currentPage\") != null)) {\n      return this.sess(\"currentPage\");\n    } else {\n      return this._currentPage;\n    }\n  };\n\n  Pages.prototype.isReady = function() {\n    return this.sess(\"ready\");\n  };\n\n  Pages.prototype.ready = function(p) {\n    if (p === true || p === this.currentPage() && (typeof Session !== \"undefined\" && Session !== null)) {\n      return this.sess(\"ready\", true);\n    }\n  };\n\n  Pages.prototype.checkInitPage = function() {\n    var _ref, _ref1, _ref2;\n    if (this.init) {\n      if (this.router) {\n        if ((_ref = Router.current()) != null) {\n          if ((_ref1 = _ref.route) != null) {\n            _ref1.getName();\n          }\n        }\n        try {\n          this.initPage = parseInt((_ref2 = Router.current().route.params(location.href)) != null ? _ref2.page : void 0) || 1;\n          this.init = false;\n        } catch (_error) {\n          return;\n        }\n      } else {\n        this.initPage = 1;\n        this.init = false;\n      }\n    }\n    this.sess(\"oldPage\", this.initPage);\n    return this.sess(\"currentPage\", this.initPage);\n  };\n\n  Pages.prototype.getPage = function(page) {\n    var c, n, total;\n    if (Meteor.isClient) {\n      if (page == null) {\n        page = this.currentPage();\n      }\n      page = parseInt(page);\n      if (page === NaN) {\n        return;\n      }\n      total = this.sess(\"totalPages\");\n      if (total === 0) {\n        return this.ready(true);\n      }\n      if (page <= total) {\n        this.requestPage(page);\n        this.queueNeighbors(page);\n        this.checkQueue();\n      }\n      if (this.infinite) {\n        n = this.PaginatedCollection.find({}, {\n          fields: this.fields,\n          sort: this.sort\n        }).count();\n        c = this.PaginatedCollection.find({}, {\n          fields: this.fields,\n          sort: this.sort,\n          skip: this.infiniteItemsLimit !== Infinity && n > this.infiniteItemsLimit ? n - this.infiniteItemsLimit : 0,\n          limit: this.infiniteItemsLimit\n        });\n      } else {\n        c = this.PaginatedCollection.find(_.object([[\"_\" + this.id + \"_p\", page]]), {\n          fields: this.fields,\n          sort: _.object([[\"_\" + this.id + \"_i\", 1]])\n        });\n        c.observeChanges({\n          added: (function(_this) {\n            return function() {\n              return _this.countPages();\n            };\n          })(this),\n          removed: (function(_this) {\n            return function() {\n              return _this.countPages();\n            };\n          })(this)\n        });\n      }\n      return c.fetch();\n    }\n  };\n\n  Pages.prototype.requestPage = function(page) {\n    if (!page || this.requested[page] || this.received[page]) {\n      return;\n    }\n    this.logRequest(page);\n    return Meteor.defer((function(page) {\n      return this.subscriptions[page] = Meteor.subscribe(this.id, page, {\n        onReady: (function(page) {\n          return this.onPage(page);\n        }).bind(this, page),\n        onError: (function(_this) {\n          return function(e) {\n            return _this.error(e.message);\n          };\n        })(this)\n      });\n    }).bind(this, page));\n  };\n\n  Pages.prototype.onPage = function(page) {\n    this.logResponse(page);\n    this.ready(page);\n    if (this.infinite) {\n      this.lastPage = page;\n    }\n    this.countPages();\n    return this.checkQueue();\n  };\n\n  return Pages;\n\n})();\n\nMeteor.Pagination = Pages;\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/alethes:pages/client/template.templates.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"pages\");                                                                                         // 2\nTemplate[\"pages\"] = new Template(\"Template.pages\", (function() {                                                       // 3\n  var view = this;                                                                                                     // 4\n  return \"\";                                                                                                           // 5\n}));                                                                                                                   // 6\n                                                                                                                       // 7\nTemplate.__checkName(\"pagesNav\");                                                                                      // 8\nTemplate[\"pagesNav\"] = new Template(\"Template.pagesNav\", (function() {                                                 // 9\n  var view = this;                                                                                                     // 10\n  return \"\";                                                                                                           // 11\n}));                                                                                                                   // 12\n                                                                                                                       // 13\nTemplate.__checkName(\"_pagesLoading\");                                                                                 // 14\nTemplate[\"_pagesLoading\"] = new Template(\"Template._pagesLoading\", (function() {                                       // 15\n  var view = this;                                                                                                     // 16\n  return HTML.Raw('<div class=\"pagesLoadingDefaultCont\">\\n    <div class=\"pagesLoadingDefault\"><img src=\"/packages/alethes_pages/public/loader.gif\"></div>\\n  </div>');\n}));                                                                                                                   // 18\n                                                                                                                       // 19\nTemplate.__checkName(\"_pagesPageCont\");                                                                                // 20\nTemplate[\"_pagesPageCont\"] = new Template(\"Template._pagesPageCont\", (function() {                                     // 21\n  var view = this;                                                                                                     // 22\n  return Blaze.If(function() {                                                                                         // 23\n    return Spacebars.dataMustache(view.lookup(\"divWrapper\"), view.lookup(\"pagesData\"));                                // 24\n  }, function() {                                                                                                      // 25\n    return [ \"\\n    \", HTML.DIV({                                                                                      // 26\n      \"class\": function() {                                                                                            // 27\n        return Spacebars.mustache(view.lookup(\"divWrapper\"), view.lookup(\"pagesData\"));                                // 28\n      }                                                                                                                // 29\n    }, \"\\n      \", Blaze._TemplateWith(function() {                                                                    // 30\n      return Spacebars.call(view.lookup(\"pagesData\"));                                                                 // 31\n    }, function() {                                                                                                    // 32\n      return Spacebars.include(view.lookupTemplate(\"_pagesPage\"));                                                     // 33\n    }), \"\\n    \"), \"\\n  \" ];                                                                                           // 34\n  }, function() {                                                                                                      // 35\n    return [ Blaze.If(function() {                                                                                     // 36\n      return Spacebars.dataMustache(view.lookup(\"table\"), view.lookup(\"pagesData\"));                                   // 37\n    }, function() {                                                                                                    // 38\n      return [ \"\\n    \", Blaze.If(function() {                                                                         // 39\n        return Spacebars.dataMustache(view.lookup(\"tableWrapper\"), view.lookup(\"pagesData\"));                          // 40\n      }, function() {                                                                                                  // 41\n        return [ \"\\n      \", HTML.DIV({                                                                                // 42\n          \"class\": function() {                                                                                        // 43\n            return Spacebars.mustache(view.lookup(\"tableWrapper\"), view.lookup(\"pagesData\"));                          // 44\n          }                                                                                                            // 45\n        }, \"\\n        \", Blaze._TemplateWith(function() {                                                              // 46\n          return Spacebars.call(view.lookup(\"pagesData\"));                                                             // 47\n        }, function() {                                                                                                // 48\n          return Spacebars.include(view.lookupTemplate(\"_pagesTable\"));                                                // 49\n        }), \"\\n      \"), \"\\n    \" ];                                                                                   // 50\n      }, function() {                                                                                                  // 51\n        return [ \"\\n        \", Blaze._TemplateWith(function() {                                                        // 52\n          return Spacebars.call(view.lookup(\"pagesData\"));                                                             // 53\n        }, function() {                                                                                                // 54\n          return Spacebars.include(view.lookupTemplate(\"_pagesTable\"));                                                // 55\n        }), \"\\n    \" ];                                                                                                // 56\n      }), \"\\n  \" ];                                                                                                    // 57\n    }, function() {                                                                                                    // 58\n      return [ \"\\n  \", Blaze._TemplateWith(function() {                                                                // 59\n        return Spacebars.call(view.lookup(\"pagesData\"));                                                               // 60\n      }, function() {                                                                                                  // 61\n        return Spacebars.include(view.lookupTemplate(\"_pagesPage\"));                                                   // 62\n      }), \"\\n  \" ];                                                                                                    // 63\n    }), \"\\n  \" ];                                                                                                      // 64\n  });                                                                                                                  // 65\n}));                                                                                                                   // 66\n                                                                                                                       // 67\nTemplate.__checkName(\"_pagesTable\");                                                                                   // 68\nTemplate[\"_pagesTable\"] = new Template(\"Template._pagesTable\", (function() {                                           // 69\n  var view = this;                                                                                                     // 70\n  return HTML.TABLE({                                                                                                  // 71\n    \"class\": function() {                                                                                              // 72\n      return Spacebars.mustache(view.lookup(\"class\"));                                                                 // 73\n    }                                                                                                                  // 74\n  }, \"\\n    \", HTML.THEAD(\"\\n      \", HTML.TR(\"\\n        \", Blaze.Each(function() {                                    // 75\n    return Spacebars.call(view.lookup(\"header\"));                                                                      // 76\n  }, function() {                                                                                                      // 77\n    return [ \"\\n          \", HTML.TH(Blaze.View(function() {                                                           // 78\n      return Spacebars.mustache(view.lookup(\"value\"));                                                                 // 79\n    })), \"\\n        \" ];                                                                                               // 80\n  }), \"\\n      \"), \"\\n    \"), \"\\n    \", HTML.TBODY(\"\\n      \", Spacebars.include(view.lookupTemplate(\"_pagesPage\")), \"\\n    \"), \"\\n  \");\n}));                                                                                                                   // 82\n                                                                                                                       // 83\nTemplate.__checkName(\"_pagesTableItem\");                                                                               // 84\nTemplate[\"_pagesTableItem\"] = new Template(\"Template._pagesTableItem\", (function() {                                   // 85\n  var view = this;                                                                                                     // 86\n  return HTML.TR(\"\\n    \", Blaze.Each(function() {                                                                     // 87\n    return Spacebars.dataMustache(view.lookup(\"attrs\"), view.lookup(\"..\"));                                            // 88\n  }, function() {                                                                                                      // 89\n    return [ \"\\n      \", HTML.TD(Blaze.View(function() {                                                               // 90\n      return Spacebars.mustache(view.lookup(\"value\"));                                                                 // 91\n    })), \"\\n    \" ];                                                                                                   // 92\n  }), \"\\n  \");                                                                                                         // 93\n}));                                                                                                                   // 94\n                                                                                                                       // 95\nTemplate.__checkName(\"_pagesPage\");                                                                                    // 96\nTemplate[\"_pagesPage\"] = new Template(\"Template._pagesPage\", (function() {                                             // 97\n  var view = this;                                                                                                     // 98\n  return [ Blaze.If(function() {                                                                                       // 99\n    return Spacebars.dataMustache(view.lookup(\"ready\"), view.lookup(\"pagesData\"));                                     // 100\n  }, function() {                                                                                                      // 101\n    return \"\\n  \";                                                                                                     // 102\n  }, function() {                                                                                                      // 103\n    return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"_pagesLoading\")), \"\\n  \" ];                              // 104\n  }), \"\\n  \", Blaze.Each(function() {                                                                                  // 105\n    return Spacebars.call(view.lookup(\"items\"));                                                                       // 106\n  }, function() {                                                                                                      // 107\n    return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"item\")), \"\\n  \" ];                                       // 108\n  }) ];                                                                                                                // 109\n}));                                                                                                                   // 110\n                                                                                                                       // 111\nTemplate.__checkName(\"_pagesNavCont\");                                                                                 // 112\nTemplate[\"_pagesNavCont\"] = new Template(\"Template._pagesNavCont\", (function() {                                       // 113\n  var view = this;                                                                                                     // 114\n  return Blaze._TemplateWith(function() {                                                                              // 115\n    return Spacebars.call(view.lookup(\"pagesData\"));                                                                   // 116\n  }, function() {                                                                                                      // 117\n    return Spacebars.include(view.lookupTemplate(\"_pagesNav\"));                                                        // 118\n  });                                                                                                                  // 119\n}));                                                                                                                   // 120\n                                                                                                                       // 121\nTemplate.__checkName(\"_pagesNav\");                                                                                     // 122\nTemplate[\"_pagesNav\"] = new Template(\"Template._pagesNav\", (function() {                                               // 123\n  var view = this;                                                                                                     // 124\n  return Blaze.If(function() {                                                                                         // 125\n    return Spacebars.call(view.lookup(\"show\"));                                                                        // 126\n  }, function() {                                                                                                      // 127\n    return [ \"\\n    \", HTML.DIV({                                                                                      // 128\n      style: \"text-align:center\",                                                                                      // 129\n      \"data-pages\": function() {                                                                                       // 130\n        return Spacebars.mustache(view.lookup(\"name\"));                                                                // 131\n      },                                                                                                               // 132\n      \"class\": \"pagination-cont\"                                                                                       // 133\n    }, \"\\n      \", HTML.UL({                                                                                           // 134\n      \"class\": \"pagination\"                                                                                            // 135\n    }, \"\\n      \", Blaze.Each(function() {                                                                             // 136\n      return Spacebars.call(view.lookup(\"paginationNeighbors\"));                                                       // 137\n    }, function() {                                                                                                    // 138\n      return [ \"\\n        \", HTML.LI({                                                                                 // 139\n        \"class\": function() {                                                                                          // 140\n          return [ Spacebars.mustache(view.lookup(\"active\")), \" \", Spacebars.mustache(view.lookup(\"disabled\")) ];      // 141\n        }                                                                                                              // 142\n      }, \"\\n          \", HTML.A({                                                                                      // 143\n        href: function() {                                                                                             // 144\n          return Spacebars.mustache(view.lookup(\"link\"));                                                              // 145\n        }                                                                                                              // 146\n      }, Blaze.View(function() {                                                                                       // 147\n        return Spacebars.mustache(view.lookup(\"p\"));                                                                   // 148\n      })), \"\\n        \"), \"\\n      \" ];                                                                                // 149\n    }), \"\\n      \"), \"\\n    \"), \"\\n  \" ];                                                                              // 150\n  });                                                                                                                  // 151\n}));                                                                                                                   // 152\n                                                                                                                       // 153\nTemplate.__checkName(\"_pagesItemDefault\");                                                                             // 154\nTemplate[\"_pagesItemDefault\"] = new Template(\"Template._pagesItemDefault\", (function() {                               // 155\n  var view = this;                                                                                                     // 156\n  return HTML.DIV({                                                                                                    // 157\n    \"class\": \"pagesItemDefault\"                                                                                        // 158\n  }, Blaze.Each(function() {                                                                                           // 159\n    return Spacebars.call(view.lookup(\"properties\"));                                                                  // 160\n  }, function() {                                                                                                      // 161\n    return [ \"\\n    \", HTML.DIV(HTML.I(Blaze.View(function() {                                                         // 162\n      return Spacebars.mustache(view.lookup(\"name\"));                                                                  // 163\n    })), \": \", Blaze.View(function() {                                                                                 // 164\n      return Spacebars.mustache(view.lookup(\"value\"));                                                                 // 165\n    })) ];                                                                                                             // 166\n  }), \"\\n  \");                                                                                                         // 167\n}));                                                                                                                   // 168\n                                                                                                                       // 169\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/alethes:pages/client/controllers.coffee.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar global, te, th;\n\nglobal = this;\n\nth = Template.prototype.helpers;\n\nthis._TemplateHelpers = {};\n\nTemplate.prototype.helpers = function(dict) {\n  global._TemplateHelpers[this.viewName.substr(9)] = dict;\n  return th.apply(this, arguments);\n};\n\nte = Template.prototype.events;\n\nthis._TemplateEvents = {};\n\nTemplate.prototype.events = function(dict) {\n  global._TemplateEvents[this.viewName.substr(9)] = dict;\n  return te.apply(this, arguments);\n};\n\nTemplate._pagesPageCont.helpers({\n  divWrapper: function(self) {\n    return !self.table && self.divWrapper;\n  },\n  table: function(self) {\n    return self.table;\n  },\n  tableWrapper: function(self) {\n    return self.table.wrapper;\n  }\n});\n\nTemplate._pagesTable.helpers({\n  \"class\": function() {\n    return this.table[\"class\"] || \"\";\n  },\n  fields: function() {\n    return _.map(this.table.fields, function(v) {\n      return {\n        value: v\n      };\n    });\n  },\n  header: function() {\n    return _.map(this.table.header || this.table.fields, function(v) {\n      return {\n        value: v\n      };\n    });\n  }\n});\n\nTemplate._pagesPage.helpers({\n  ready: function() {\n    return this.sess(\"ready\");\n  },\n  items: function() {\n    var cp, i, k, n, op, p, _i, _len;\n    if (this.infinite) {\n      setTimeout((function(_this) {\n        return function() {\n          return _this.blockScrolling = false;\n        };\n      })(this), 100);\n    }\n    if (this.init) {\n      this.checkInitPage();\n    }\n    cp = this.sess(\"currentPage\");\n    op = this.sess(\"oldPage\");\n    this.sess(\"ready\");\n    if (0 === this.sess(\"totalPages\")) {\n      this.ready(true);\n      return [];\n    }\n    if (this.received[cp] || (this.fastRender && cp === this.initPage)) {\n      this.ready(true);\n      n = cp;\n    } else {\n      this.sess(\"ready\", false);\n      this.getPage(cp);\n      n = op;\n    }\n    if (n == null) {\n      return [];\n    }\n    p = this.getPage(n);\n    if (p == null) {\n      return [];\n    }\n    for (k = _i = 0, _len = p.length; _i < _len; k = ++_i) {\n      i = p[k];\n      p[k]['_t'] = this.itemTemplate;\n    }\n    return p;\n  },\n  item: function() {\n    return Template[this._t];\n  }\n});\n\nTemplate._pagesNav.helpers({\n  show: function() {\n    return this.fastRender || (!this.infinite && 1 < this.sess(\"totalPages\"));\n  },\n  link: function() {\n    var p, self, total;\n    self = this._p;\n    if (self.router) {\n      p = this.n;\n      if (p < 1) {\n        p = 1;\n      }\n      total = self.sess(\"totalPages\");\n      if (p > total) {\n        p = total;\n      }\n      return self.linkTo(p);\n    }\n    return \"#\";\n  },\n  paginationNeighbors: function() {\n    return this.paginationNeighbors();\n  }\n});\n\nTemplate._pagesNav.events({\n  \"click a\": function(e) {\n    return (_.throttle(function(e, n) {\n      var self;\n      self = Meteor.Pagination.prototype.instances[e.target.parentNode.parentNode.parentNode.getAttribute('data-pages')];\n      if (self.router !== \"iron-router\") {\n        e.preventDefault();\n        return self.onNavClick.call(self, n);\n      }\n    }, self.rateLimit * 1000))(e, this.n);\n  }\n});\n\nTemplate._pagesTableItem.helpers({\n  attrs: function(self) {\n    return _.map(self.table.fields, (function(n) {\n      return {\n        value: this[n] != null ? this[n] : \"\"\n      };\n    }).bind(this));\n  }\n});\n\nTemplate._pagesItemDefault.helpers({\n  properties: function() {\n    return _.compact(_.map(this, function(v, k) {\n      if (k[0] !== \"_\") {\n        return {\n          name: k,\n          value: v\n        };\n      } else {\n        return null;\n      }\n    }));\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}}]